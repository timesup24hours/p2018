{"version":3,"sources":["components/ScrollIndicator/index.js","components/ScrollIndicator/ScrollIndicator.js","components/Note/index.js","components/Note/Note.js","components/MyNotesPage/MyNotes.js","components/MyNotesPage/fetchingBottomArea.js","components/MyNotesPage/MyNotesContainer.js","components/MyNotesPage/index.js","components/MyNotesPage/index.module.css","components/ScrollIndicator/index.module.css","components/Note/index.module.css"],"names":["ScrollIndicator","_ref","scrolled","react_default","a","createElement","className","styles","scollLine","style","width","concat","Note","note","_useState","useState","_useState2","Object","slicedToArray","isDelete","setIsDelete","_useState3","_useState4","setUnMount","lib_default","index","enableMouseEvents","container","onChangeIndex","indexLatest","meta","document","querySelector","wrapper","row","Link","to","hash","id","pathname","title","height","subTitle","React","forwardRef","props","ref","notes","hasMoreNotesToLoad","loading","fetchLoading","handleScroll","Loading","onScroll","components_ScrollIndicator","length","map","i","src_components_Note","key","lastNote","fetchingBottomArea","range","div","scrollTop","clientHeight","scrollHeight","MyNotesContainer","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","scrollerDiv","createRef","getNotes","data","notesFetchRequested","setScrolled","e","setState","current","window","innerHeight","start","cursor","loadAmount","inherits","createClass","value","mounted","prevProps","prevStates","Fragment","MyNotesPage_MyNotes","assign","notesFetchCancelled","Component","connect","message","dispatch","module","exports"],"mappings":"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","file":"static/js/168.fd2dafcd.chunk.js","sourcesContent":["// import React from 'react';\nimport ScrollIndicator from './ScrollIndicator';\n\nexport default ScrollIndicator;\n","import React from 'react';\n\nimport styles from './index.module.css';\n\nexport default ({ scrolled }) => {\n  // console.log(scrolled);\n  return <div className={styles.scollLine} style={{ width: `${scrolled}%` }} />;\n};\n","// import React from 'react';\nimport Note from './Note';\n\nexport default Note;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\n\nimport styles from './index.module.css';\nimport './index.scss';\n\nconst Note = ({ note }) => {\n  const [isDelete, setIsDelete] = useState(false);\n  const [umMount, setUnMount] = useState(false);\n  const onChangeIndex = (index, indexLatest, meta) => {\n    const node = document.querySelector('.Note');\n    if (index === 2) {\n      setIsDelete(true);\n      setUnMount(true);\n      // const timerEvent = setTimeout(() => {\n      //   // node.style.WebkitAnimation = 'aniGoAway 0.2s linear 0.5s forwards';\n      //   clearTimeout(timerEvent);\n      // }, 1000);\n    } else if (index === 0) {\n      setIsDelete(true);\n      setUnMount(true);\n      // const timerEvent = setTimeout(() => {\n      //   // node.style.WebkitAnimation = 'aniGoAway 0.2s linear 0.5s forwards';\n      //   clearTimeout(timerEvent);\n      // }, 1000);\n    }\n  };\n  return (\n    <SwipeableViews\n      index={1}\n      enableMouseEvents\n      className={`Note ${styles.container} ${isDelete ? 'isDelete' : ''} ${\n        isDelete ? 'goAway' : ''\n      }`}\n      onChangeIndex={onChangeIndex}\n    >\n      <div className=\"read\">Read</div>\n      <div className={`wrapper ${styles.wrapper} ${styles.row} `}>\n        <Link\n          to={{\n            hash: note.id,\n            pathname: `/my_notes/${note.title}`\n          }}\n          style={{ height: `${note.subTitle ? 'auto' : '100%'}` }}\n        >\n          <h1 className={`${note.subTitle ? '' : 'flex-center'}`}>\n            {note.title}\n          </h1>\n        </Link>\n        {note.subTitle && (\n          <div className={styles.subTitle}>{note.subTitle}</div>\n        )}\n        {/* <div className=\"instruction\">Swipe ðŸ‘ˆ or ðŸ‘‰</div> */}\n      </div>\n      <div className=\"delete\">Delete</div>\n    </SwipeableViews>\n  );\n};\n\nexport default Note;\n","import React from 'react';\n\nimport styles from './index.module.css';\n\nimport Loading from '../Loading';\nimport ScrollIndicator from '../ScrollIndicator';\nimport Note from '../Note';\n\nconst MyNotes = (props, ref) => {\n  const {\n    notes,\n    hasMoreNotesToLoad,\n    loading,\n    fetchLoading,\n    scrolled,\n    handleScroll\n  } = props;\n\n  return loading ? (\n    <div className=\"center\">\n      <Loading />\n    </div>\n  ) : (\n    <div className={styles.container} onScroll={handleScroll} ref={ref}>\n      {scrolled ? <ScrollIndicator scrolled={scrolled} /> : null}\n      {notes.length\n        ? notes.map((note, i) => <Note key={i} note={note} />)\n        : null}\n      {fetchLoading ? (\n        <div className={styles.loading}>\n          <Loading />\n        </div>\n      ) : null}\n      {hasMoreNotesToLoad ? null : (\n        <div className={styles.lastNote}>Last Note</div>\n      )}\n    </div>\n  );\n};\n\nexport default React.forwardRef(MyNotes);\n","// Returns the area of fecthing data at the bottom\n// div.scrollTo: scroll position of the div\n// div.clientHeight: div's view height\n// div.scrollHeight: div's whole height\n// @param {number} range - the desired loading distance\n// @param {element} div\n\nexport default (range, div) =>\n  div.scrollTop + div.clientHeight >= div.scrollHeight - range;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { notes } from '../../actions';\n\nimport MyNotes from './MyNotes';\nimport fetchingBottomArea from './fetchingBottomArea';\n\nimport './index.scss';\n\nexport class MyNotesContainer extends Component {\n  state = {\n    scrolled: 0,\n    scrollHeight: 0\n  };\n  scrollerDiv = React.createRef();\n\n  // fecthing notes when the first entry\n  componentDidMount() {\n    this.mounted = true;\n    if (this.props.notes && this.props.notes.length === 0 && this.mounted)\n      this.getNotes({ start: 0, loadAmount: 20 });\n  }\n\n  // update the percent of the scroll indicator bar when finishing fetch\n  componentDidUpdate(prevProps, prevStates) {\n    if (\n      this.scrollerDiv.current &&\n      this.scrollerDiv.current.scrollHeight !== prevStates.scrollHeight\n    ) {\n      this.setScrolled();\n    }\n  }\n\n  // fetching data\n  getNotes = data => {\n    this.props.notesFetchRequested(data);\n  };\n\n  // set state\n  setScrolled = e => {\n    // scrolled is for the percent of the scroll bar\n    this.setState({\n      scrolled:\n        (this.scrollerDiv.current.scrollTop /\n          (this.scrollerDiv.current.scrollHeight - window.innerHeight)) *\n        100\n    });\n    // scrollHeight is for the comparison of componentDidUpdate\n    this.setState({ scrollHeight: this.scrollerDiv.current.scrollHeight });\n  };\n\n  // fetching data when reach the bottom area\n  handleScroll = e => {\n    this.setScrolled();\n    if (\n      this.scrollerDiv.current &&\n      fetchingBottomArea(100, this.scrollerDiv.current) &&\n      this.props.hasMoreNotesToLoad &&\n      !this.props.fetchLoading\n    ) {\n      this.getNotes({\n        start: this.props.cursor,\n        loadAmount: this.props.loadAmount\n      });\n    }\n  };\n\n  render() {\n    const { scrolled } = this.state;\n\n    return (\n      <>\n        <MyNotes\n          {...this.props}\n          ref={this.scrollerDiv}\n          scrolled={scrolled}\n          handleScroll={this.handleScroll}\n        />\n        <div className=\"MyNotesContainer-desc\">Swipe ðŸ‘ˆ or ðŸ‘‰</div>\n      </>\n    );\n  }\n\n  // cancel fethcing when changing component\n  componentWillUnmount() {\n    this.mounted = false;\n    this.getNotes = null;\n    this.props.notesFetchCancelled();\n  }\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes.notes,\n  cursor: state.notes.cursor,\n  loading: state.notes.loading,\n  hasMoreNotesToLoad: state.notes.hasMoreNotesToLoad,\n  fetchLoading: state.notes.fetchLoading,\n  message: state.notes.message,\n  loadAmount: state.notes.loadAmount\n});\n\nconst mapDispatchToProps = dispatch => ({\n  notesFetchRequested: data => dispatch(notes.notesFetchRequested(data)),\n  notesFetchCancelled: () => dispatch(notes.notesFetchCancelled())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyNotesContainer);\n","// import React from 'react';\nimport MyNotesContainer from './MyNotesContainer';\n\nexport default MyNotesContainer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyNotesPage_container__Nt3xt\",\"loading\":\"MyNotesPage_loading__2Rsl7\",\"lastNote\":\"MyNotesPage_lastNote__1912Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scollLine\":\"ScrollIndicator_scollLine__3ZEpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Note_container__1mut8\",\"wrapper\":\"Note_wrapper__e2RXE\",\"subTitle\":\"Note_subTitle__9jJa3\",\"row\":\"Note_row__2VfX1\"};"],"sourceRoot":""}