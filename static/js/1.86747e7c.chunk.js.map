{"version":3,"sources":["../node_modules/lodash/_root.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/isObject.js","../node_modules/lodash/keys.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/eq.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/process/browser.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/isArray.js"],"names":["freeGlobal","__webpack_require__","freeSelf","self","Object","root","Function","module","exports","value","baseIsNative","getValue","object","key","undefined","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","type","arrayLikeKeys","baseKeys","isArrayLike","baseToString","defineProperty","configurable","enumerable","writable","DataView","Map","Promise","Set","WeakMap","baseGetTag","toSource","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","result","Ctor","constructor","ctorString","nativeCreate","getNative","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","this","clear","entry","set","prototype","get","has","eq","array","isKeyable","map","data","__data__","isSymbol","INFINITY","webpackPolyfill","deprecate","paths","children","l","i","isFunction","isLength","isArray","reIsDeepProp","reIsPlainProp","test","isObjectLike","symbolTag","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","other","MAX_SAFE_INTEGER","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","size","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","func","freeProcess","process","nodeUtil","types","require","binding","e","objectProto","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","getSymbols","symbol","call","baseFor","keys","iteratee","baseMatches","baseMatchesProperty","identity","property","baseIsEqualDeep","baseIsEqual","bitmask","customizer","stack","castPath","isArguments","isIndex","toKey","path","hasFunc","isKey","stringToPath","toString","global","isObject","asyncTag","funcTag","genTag","proxyTag","tag","funcToString","Array","baseIsArguments","hasOwnProperty","arguments","reIsUint","baseTimes","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","push","baseIsTypedArray","baseUnary","nodeIsTypedArray","transform","arg","values","offset","baseGetAllKeys","arrayPush","keysFunc","symbolsFunc","Uint8Array","forEach","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","srcValue","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","noop","nextTick","args","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","cwd","chdir","dir","umask","d","__webpack_exports__","Doughnut","Bar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","source","_objectWithoutProperties","obj","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","a","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","destroy","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","isRequired","number","arrayOf","bool","propName","componentName","controllers","display","position","_React$Component2","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","Line","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","uid","isNullOrUndef","substr","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","nativeObjectToString","isOwn","unmasked","memoizeCapped","rePropName","reEscapeChar","charCodeAt","replace","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","isMasked","reIsHostCtor","funcProto","reIsNative","RegExp","coreJsData","maskSrcKey","IE_PROTO","HASH_UNDEFINED","assocIndexOf","getMapData","arrayMap","symbolProto","symbolToString","argsTag","LARGE_ARRAY_SIZE","pairs","typedArrayTags","isPrototype","nativeKeys","overArg","predicate","resIndex","createBaseFor","fromRight","iterable","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","objValue","equalArrays","equalByTag","equalObjects","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","setCacheAdd","setCacheHas","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objCtor","othCtor","isStrictComparable","hasIn","baseGet","baseHasIn","hasPath","baseProperty","basePropertyDeep","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","eachFunc"],"mappings":"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","file":"static/js/1.86747e7c.chunk.js","sourcesContent":["var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;"],"sourceRoot":""}