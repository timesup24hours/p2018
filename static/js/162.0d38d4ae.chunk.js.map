{"version":3,"sources":["components/MyNotesPage/index.module.css","components/ScrollIndicator/index.module.css","components/Note/index.module.css","components/ScrollIndicator/index.js","components/ScrollIndicator/ScrollIndicator.js","components/Note/index.js","components/Note/Note.js","components/MyNotesPage/MyNotes.js","components/MyNotesPage/fetchingBottomArea.js","components/MyNotesPage/MyNotesContainer.js","components/MyNotesPage/index.js"],"names":["module","exports","container","loading","lastNote","scollLine","wrapper","subTitle","row","ScrollIndicator","_ref","scrolled","react_default","a","createElement","className","styles","style","width","concat","Note","note","Link","to","hash","id","pathname","title","React","forwardRef","props","ref","notes","hasMoreNotesToLoad","fetchLoading","handleScroll","Loading","onScroll","components_ScrollIndicator","length","map","i","components_Note","key","fetchingBottomArea","range","div","scrollTop","clientHeight","scrollHeight","MyNotesContainer","state","scrollerDiv","createRef","getNotes","data","_this","notesFetchRequested","setScrolled","e","setState","current","window","innerHeight","start","cursor","loadAmount","this","mounted","prevProps","prevStates","MyNotes","Object","assign","notesFetchCancelled","Component","connect","message","dispatch"],"mappings":"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","file":"static/js/162.0d38d4ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyNotesPage_container__Nt3xt\",\"loading\":\"MyNotesPage_loading__2Rsl7\",\"lastNote\":\"MyNotesPage_lastNote__1912Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scollLine\":\"ScrollIndicator_scollLine__3ZEpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Note_container__1mut8\",\"wrapper\":\"Note_wrapper__e2RXE\",\"subTitle\":\"Note_subTitle__9jJa3\",\"row\":\"Note_row__2VfX1\"};","// import React from 'react';\nimport ScrollIndicator from './ScrollIndicator';\n\nexport default ScrollIndicator;\n","import React from 'react';\n\nimport styles from './index.module.css';\n\nexport default ({ scrolled }) => {\n  // console.log(scrolled);\n  return <div className={styles.scollLine} style={{ width: `${scrolled}%` }} />;\n};\n","// import React from 'react';\nimport Note from './Note';\n\nexport default Note;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from './index.module.css';\n\nexport default ({ note }) => {\n  return (\n    <Link\n      to={{\n        hash: note.id,\n        pathname: `/my_notes/${note.title}`\n      }}\n      className={styles.container}\n    >\n      <div\n        className={`${styles.wrapper} ${styles.row} ${\n          note.subTitle ? '' : `flex-center`\n        }`}\n      >\n        <h1>{note.title}</h1>\n        <div className={styles.subTitle}>{note.subTitle}</div>\n      </div>\n    </Link>\n  );\n};\n","import React from 'react';\n\nimport styles from './index.module.css';\n\nimport Loading from '../Loading';\nimport ScrollIndicator from '../ScrollIndicator';\nimport Note from '../Note';\n\nexport default React.forwardRef((props, ref) => {\n  const {\n    notes,\n    hasMoreNotesToLoad,\n    loading,\n    fetchLoading,\n    scrolled,\n    handleScroll\n  } = props;\n\n  return loading ? (\n    <div className=\"center\">\n      <Loading />\n    </div>\n  ) : (\n    <div className={styles.container} onScroll={handleScroll} ref={ref}>\n      {scrolled ? <ScrollIndicator scrolled={scrolled} /> : null}\n      {notes.length\n        ? notes.map((note, i) => <Note key={i} note={note} />)\n        : null}\n      {fetchLoading ? (\n        <div className={styles.loading}>\n          <Loading />\n        </div>\n      ) : null}\n      {hasMoreNotesToLoad ? null : (\n        <div className={styles.lastNote}>Last Note</div>\n      )}\n    </div>\n  );\n});\n","// Returns the area of fecthing data at the bottom\n// div.scrollTo: scroll position of the div\n// div.clientHeight: div's view height\n// div.scrollHeight: div's whole height\n// @param {number} range - the desired loading distance\n// @param {element} div\n\nexport default (range, div) =>\n  div.scrollTop + div.clientHeight >= div.scrollHeight - range;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { notes } from '../../actions';\n\nimport MyNotes from './MyNotes';\nimport fetchingBottomArea from './fetchingBottomArea';\n\nclass MyNotesContainer extends Component {\n  state = {\n    scrolled: 0,\n    scrollHeight: 0\n  };\n  scrollerDiv = React.createRef();\n\n  // fecthing notes when the first entry\n  componentDidMount() {\n    this.mounted = true;\n    if (this.props.notes && this.props.notes.length === 0 && this.mounted)\n      this.getNotes({ start: 0, loadAmount: 20 });\n  }\n\n  // update the percent of the scroll indicator bar when finishing fetch\n  componentDidUpdate(prevProps, prevStates) {\n    if (\n      this.scrollerDiv.current &&\n      this.scrollerDiv.current.scrollHeight !== prevStates.scrollHeight\n    ) {\n      this.setScrolled();\n    }\n  }\n\n  // fetching data\n  getNotes = data => {\n    this.props.notesFetchRequested(data);\n  };\n\n  // set state\n  setScrolled = e => {\n    // scrolled is for the percent of the scroll bar\n    this.setState({\n      scrolled:\n        (this.scrollerDiv.current.scrollTop /\n          (this.scrollerDiv.current.scrollHeight - window.innerHeight)) *\n        100\n    });\n    // scrollHeight is for the comparison of componentDidUpdate\n    this.setState({ scrollHeight: this.scrollerDiv.current.scrollHeight });\n  };\n\n  // fetching data when reach the bottom area\n  handleScroll = e => {\n    this.setScrolled();\n    if (\n      this.scrollerDiv.current &&\n      fetchingBottomArea(100, this.scrollerDiv.current) &&\n      this.props.hasMoreNotesToLoad &&\n      !this.props.fetchLoading\n    ) {\n      this.getNotes({\n        start: this.props.cursor,\n        loadAmount: this.props.loadAmount\n      });\n    }\n  };\n\n  render() {\n    const { scrolled } = this.state;\n\n    return (\n      <MyNotes\n        {...this.props}\n        ref={this.scrollerDiv}\n        scrolled={scrolled}\n        handleScroll={this.handleScroll}\n      />\n    );\n  }\n\n  // cancel fethcing when changing component\n  componentWillUnmount() {\n    this.mounted = false;\n    this.getNotes = null;\n    this.props.notesFetchCancelled();\n  }\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes.notes,\n  cursor: state.notes.cursor,\n  loading: state.notes.loading,\n  hasMoreNotesToLoad: state.notes.hasMoreNotesToLoad,\n  fetchLoading: state.notes.fetchLoading,\n  message: state.notes.message,\n  loadAmount: state.notes.loadAmount\n});\n\nconst mapDispatchToProps = dispatch => ({\n  notesFetchRequested: data => dispatch(notes.notesFetchRequested(data)),\n  notesFetchCancelled: () => dispatch(notes.notesFetchCancelled())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyNotesContainer);\n","// import React from 'react';\nimport MyNotesContainer from './MyNotesContainer';\n\nexport default MyNotesContainer;\n"],"sourceRoot":""}