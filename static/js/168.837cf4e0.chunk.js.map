{"version":3,"sources":["components/ScrollIndicator/index.js","components/ScrollIndicator/ScrollIndicator.js","components/Note/index.js","components/Note/Note.js","components/MyNotesPage/MyNotes.js","components/MyNotesPage/fetchingBottomArea.js","components/MyNotesPage/MyNotesContainer.js","components/MyNotesPage/index.js","components/ScrollIndicator/index.module.css","components/Note/index.module.css"],"names":["ScrollIndicator","_ref","scrolled","react_default","a","createElement","className","styles","scollLine","style","width","concat","Note","CSSPlugin","note","_useState","useState","_useState2","Object","slicedToArray","isDelete","setIsDelete","_useState3","_useState4","umMount","rootRef","useRef","container","ref","lib_default","index","enableMouseEvents","onChangeIndex","indexLatest","meta","refNode","current","TweenMax","to","height","minHeight","opacity","marginBottom","display","ease","Power2","easeIn","easeInOut","wrapper","row","Link","hash","id","pathname","title","subTitle","React","forwardRef","props","notes","hasMoreNotesToLoad","loading","fetchLoading","handleScroll","Loading","onScroll","components_ScrollIndicator","length","map","i","src_components_Note","key","fetchingBottomArea","range","div","scrollTop","clientHeight","scrollHeight","MyNotesContainer","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","scrollerDiv","createRef","getNotes","data","notesFetchRequested","setScrolled","e","setState","window","innerHeight","start","cursor","loadAmount","inherits","createClass","value","mounted","prevProps","prevStates","Fragment","MyNotesPage_MyNotes","assign","notesFetchCancelled","Component","connect","message","dispatch","module","exports"],"mappings":"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","file":"static/js/168.837cf4e0.chunk.js","sourcesContent":["// import React from 'react';\nimport ScrollIndicator from './ScrollIndicator';\n\nexport default ScrollIndicator;\n","import React from 'react';\n\nimport styles from './index.module.css';\n\nexport default ({ scrolled }) => {\n  // console.log(scrolled);\n  return <div className={styles.scollLine} style={{ width: `${scrolled}%` }} />;\n};\n","// import React from 'react';\nimport Note from './Note';\n\nexport default Note;\n","import React, { useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport { TweenMax, Power2 } from 'gsap/all';\nimport CSSPlugin from 'gsap/CSSPlugin';\n\nimport styles from './index.module.css';\nimport './index.scss';\nconst C = CSSPlugin; // here is the gotcha....\n\nconst Note = ({ note }) => {\n  const [isDelete, setIsDelete] = useState(false);\n  const [umMount, setUnMount] = useState(false);\n  const rootRef = useRef(null);\n  let animationTimer = undefined;\n  const onChangeIndex = (index, indexLatest, meta) => {\n    const refNode = rootRef.current;\n    if (index === 2) {\n      if (refNode) {\n        TweenMax.to(refNode, 0.5, {\n          height: '0',\n          minHeight: '0',\n          opacity: 0,\n          marginBottom: '0px',\n          display: 'none',\n          ease: Power2.easeIn\n        });\n        // animationTimer = setTimeout(() => {\n        //   setIsDelete(true);\n        //   clearTimeout(animationTimer);\n        // }, 500);\n      } else {\n        setIsDelete(true);\n      }\n      // const timerEvent = setTimeout(() => {\n      //   setUnMount(true);\n      //   // node.style.WebkitAnimation = 'aniGoAway 0.2s linear 0.5s forwards';\n      //   clearTimeout(timerEvent);\n      // }, 1000);\n    } else if (index === 0) {\n      if (refNode) {\n        TweenMax.to(refNode, 0.5, {\n          height: '0',\n          minHeight: '0',\n          opacity: 0,\n          marginBottom: '0px',\n          display: 'none',\n          ease: Power2.easeInOut\n        });\n        // animationTimer = setTimeout(() => {\n        //   setIsDelete(true);\n        //   clearTimeout(animationTimer);\n        // }, 500);\n      } else {\n        setIsDelete(true);\n      }\n\n      // const timerEvent = setTimeout(() => {\n      //   setUnMount(true);\n      //   // node.style.WebkitAnimation = 'aniGoAway 0.2s linear 0.5s forwards';\n      //   clearTimeout(timerEvent);\n      // }, 1000);\n    }\n  };\n  return umMount ? null : (\n    <div\n      className={`Note Note-root ${styles.container} ${\n        isDelete ? 'isDelete' : ''\n      } ${isDelete ? 'goAway' : ''}`}\n      ref={rootRef}\n    >\n      <SwipeableViews\n        index={1}\n        enableMouseEvents\n        className={`Note ${styles.container} ${isDelete ? 'isDelete' : ''} ${\n          isDelete ? 'goAway' : ''\n        }`}\n        style={{ width: '100%' }}\n        onChangeIndex={onChangeIndex}\n      >\n        <div className=\"read\">Read</div>\n        <div className={`wrapper ${styles.wrapper} ${styles.row} `}>\n          <Link\n            to={{\n              hash: note.id,\n              pathname: `/my_notes/${note.title}`\n            }}\n            style={{ height: `${note.subTitle ? 'auto' : '100%'}` }}\n          >\n            <h1 className={`${note.subTitle ? '' : 'flex-center'}`}>\n              {note.title}\n            </h1>\n          </Link>\n          {note.subTitle && (\n            <div className={styles.subTitle}>{note.subTitle}</div>\n          )}\n          {/* <div className=\"instruction\">Swipe ðŸ‘ˆ or ðŸ‘‰</div> */}\n        </div>\n        <div className=\"delete\">Delete</div>\n      </SwipeableViews>\n    </div>\n  );\n};\n\nexport default Note;\n","import React from 'react';\n\n// import styles from './index.module.css';\nimport './index.scss';\n\nimport Loading from '../Loading';\nimport ScrollIndicator from '../ScrollIndicator';\nimport Note from '../Note';\n\nconst MyNotes = (props, ref) => {\n  const {\n    notes,\n    hasMoreNotesToLoad,\n    loading,\n    fetchLoading,\n    scrolled,\n    handleScroll\n  } = props;\n\n  return loading ? (\n    <div className=\"center\">\n      <Loading />\n    </div>\n  ) : (\n    <div\n      className={`MyNotesContainer-container`}\n      onScroll={handleScroll}\n      ref={ref}\n    >\n      {scrolled ? <ScrollIndicator scrolled={scrolled} /> : null}\n      {notes.length\n        ? notes.map((note, i) => <Note key={i} note={note} index={i} />)\n        : null}\n      {fetchLoading ? (\n        <div className={`MyNotesContainer-loading`}>\n          <Loading />\n        </div>\n      ) : null}\n      {hasMoreNotesToLoad ? null : (\n        <div className={`MyNotesContainer-lastNote`}>Last Note</div>\n      )}\n    </div>\n  );\n};\n\nexport default React.forwardRef(MyNotes);\n","// Returns the area of fecthing data at the bottom\n// div.scrollTo: scroll position of the div\n// div.clientHeight: div's view height\n// div.scrollHeight: div's whole height\n// @param {number} range - the desired loading distance\n// @param {element} div\n\nexport default (range, div) =>\n  div.scrollTop + div.clientHeight >= div.scrollHeight - range;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { notes } from '../../actions';\n\nimport MyNotes from './MyNotes';\nimport fetchingBottomArea from './fetchingBottomArea';\n\nimport './index.scss';\n\nexport class MyNotesContainer extends Component {\n  state = {\n    scrolled: 0,\n    scrollHeight: 0\n  };\n  scrollerDiv = React.createRef();\n\n  // fecthing notes when the first entry\n  componentDidMount() {\n    this.mounted = true;\n    if (this.props.notes && this.props.notes.length === 0 && this.mounted)\n      this.getNotes({ start: 0, loadAmount: 20 });\n  }\n\n  // update the percent of the scroll indicator bar when finishing fetch\n  componentDidUpdate(prevProps, prevStates) {\n    if (\n      this.scrollerDiv.current &&\n      this.scrollerDiv.current.scrollHeight !== prevStates.scrollHeight\n    ) {\n      this.setScrolled();\n    }\n  }\n\n  // fetching data\n  getNotes = data => {\n    this.props.notesFetchRequested(data);\n  };\n\n  // set state\n  setScrolled = e => {\n    // scrolled is for the percent of the scroll bar\n    this.setState({\n      scrolled:\n        (this.scrollerDiv.current.scrollTop /\n          (this.scrollerDiv.current.scrollHeight - window.innerHeight)) *\n        100\n    });\n    // scrollHeight is for the comparison of componentDidUpdate\n    this.setState({ scrollHeight: this.scrollerDiv.current.scrollHeight });\n  };\n\n  // fetching data when reach the bottom area\n  handleScroll = e => {\n    this.setScrolled();\n    if (\n      this.scrollerDiv.current &&\n      fetchingBottomArea(100, this.scrollerDiv.current) &&\n      this.props.hasMoreNotesToLoad &&\n      !this.props.fetchLoading\n    ) {\n      this.getNotes({\n        start: this.props.cursor,\n        loadAmount: this.props.loadAmount\n      });\n    }\n  };\n\n  render() {\n    const { scrolled } = this.state;\n\n    return (\n      <>\n        <MyNotes\n          {...this.props}\n          ref={this.scrollerDiv}\n          scrolled={scrolled}\n          handleScroll={this.handleScroll}\n        />\n        <div className=\"MyNotesContainer-desc\">Swipe ðŸ‘ˆ or ðŸ‘‰</div>\n      </>\n    );\n  }\n\n  // cancel fethcing when changing component\n  componentWillUnmount() {\n    this.mounted = false;\n    this.getNotes = null;\n    this.props.notesFetchCancelled();\n  }\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes.notes,\n  cursor: state.notes.cursor,\n  loading: state.notes.loading,\n  hasMoreNotesToLoad: state.notes.hasMoreNotesToLoad,\n  fetchLoading: state.notes.fetchLoading,\n  message: state.notes.message,\n  loadAmount: state.notes.loadAmount\n});\n\nconst mapDispatchToProps = dispatch => ({\n  notesFetchRequested: data => dispatch(notes.notesFetchRequested(data)),\n  notesFetchCancelled: () => dispatch(notes.notesFetchCancelled())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyNotesContainer);\n","// import React from 'react';\nimport MyNotesContainer from './MyNotesContainer';\n\nexport default MyNotesContainer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scollLine\":\"ScrollIndicator_scollLine__3ZEpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Note_container__1mut8\",\"wrapper\":\"Note_wrapper__e2RXE\",\"subTitle\":\"Note_subTitle__9jJa3\",\"row\":\"Note_row__2VfX1\"};"],"sourceRoot":""}