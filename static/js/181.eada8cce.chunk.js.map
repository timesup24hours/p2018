{"version":3,"sources":["components/SwipeUpDismiss/index.js"],"names":["SwipeUpDismiss","_useState","useState","_useState2","Object","_Users_kk_Desktop_p2018_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setData","cardRef","useRef","stop","tlup","TimelineMax","repeat","repeatDelay","handlers","useSwipeable","onSwiped","data","deltaY","to","current","y","ease","Power4","easeIn","delay","onSwiping","Power0","tl","preventDefaultTouchmoveEvent","trackMouse","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","className","ref"],"mappings":"+LAmEeA,UA3DQ,WAAM,IAAAC,EACHC,mBAAS,MADNC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,GADcH,EAAA,GAAAA,EAAA,IAErBI,EAAUC,iBAAO,MACnBC,GAAO,EACLC,EAAO,IAAIC,IAAY,CAAEC,OAAQ,EAAGC,YAAa,IAwCjDC,EAAWC,YAAa,CAC5BC,SAxCe,SAAAC,GACXP,GAAQO,EAAKC,OAAS,IACxBR,EAAKS,GAAGZ,EAAQa,QAAS,GAAK,CAC5BC,GAAI,IACJC,KAAMC,IAAOC,SAEfd,EAAKS,GAAGZ,EAAQa,QAAS,GAAK,CAC5BC,EAAG,EACHI,MAAO,EACPH,KAAMC,IAAOC,UAGbd,GAAQO,EAAKC,OAAS,GACxBR,EAAKS,GAAGZ,EAAQa,QAAS,GAAK,CAC5BC,EAAG,EACHC,KAAMC,IAAOC,SAGjBlB,EAAQW,IAuBRS,UArBgB,SAAAT,GAChB,GAAIA,EAAKC,OAAS,IAAMT,EACtBA,GAAO,EACPC,EAAKS,GAAGZ,EAAQa,QAAS,GAAK,CAAEC,EAAG,IAAKC,KAAMK,IAAOL,YAChD,GAAIL,EAAKC,OAAS,IAAMT,EAAM,CACnCA,GAAO,EACP,IAAMmB,EAAK,IAAIjB,IAAY,CAAEC,OAAQ,EAAGC,YAAa,IACrDe,EAAGT,GAAGZ,EAAQa,QAAS,GAAK,CAC1BC,GAAI,IACJC,KAAMC,IAAOC,SAEfI,EAAGT,GAAGZ,EAAQa,QAAS,GAAK,CAC1BC,EAAG,EACHI,MAAO,EACPH,KAAMC,IAAOC,SAGjBlB,EAAQW,IAKRY,8BAA8B,EAC9BC,YAAY,IAEd,OACEC,EAAAC,EAAAC,cAAA,MAAA7B,OAAA8B,OAAA,CAAKC,UAAU,kBAAqBrB,GAClCiB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,IAAK7B,GAA3B","file":"static/js/181.eada8cce.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { TimelineMax, Power0 } from 'gsap/all';\nimport { Power4 } from 'gsap/TweenMax';\n\nimport { useSwipeable } from 'react-swipeable';\n\nimport './index.scss';\n\nconst SwipeUpDismiss = () => {\n  const [data, setData] = useState(null);\n  const cardRef = useRef(null);\n  let stop = false;\n  const tlup = new TimelineMax({ repeat: 0, repeatDelay: 0 });\n  const onSwiped = data => {\n    if (tlup && data.deltaY > 0) {\n      tlup.to(cardRef.current, 0.5, {\n        y: -1000,\n        ease: Power4.easeIn\n      });\n      tlup.to(cardRef.current, 0.5, {\n        y: 0,\n        delay: 2,\n        ease: Power4.easeIn\n      });\n    }\n    if (tlup && data.deltaY < 0) {\n      tlup.to(cardRef.current, 0.5, {\n        y: 0,\n        ease: Power4.easeIn\n      });\n    }\n    setData(data);\n  };\n  const onSwiping = data => {\n    if (data.deltaY < 0 && !stop) {\n      stop = true;\n      tlup.to(cardRef.current, 0.5, { y: 200, ease: Power0.ease });\n    } else if (data.deltaY > 0 && !stop) {\n      stop = true;\n      const tl = new TimelineMax({ repeat: 0, repeatDelay: 0 });\n      tl.to(cardRef.current, 0.5, {\n        y: -1000,\n        ease: Power4.easeIn\n      });\n      tl.to(cardRef.current, 0.5, {\n        y: 0,\n        delay: 2,\n        ease: Power4.easeIn\n      });\n    }\n    setData(data);\n  };\n  const handlers = useSwipeable({\n    onSwiped: onSwiped,\n    onSwiping: onSwiping,\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n  return (\n    <div className=\"SwipeUpDismiss\" {...handlers}>\n      <div className=\"card\" ref={cardRef}>\n        Swipe ☝️ or 👇\n      </div>\n    </div>\n  );\n};\n\nexport default SwipeUpDismiss;\n"],"sourceRoot":""}