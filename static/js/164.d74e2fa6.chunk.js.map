{"version":3,"sources":["components/NoteDetailPage/index.module.css","components/NoteDetailPage/NoteDetailPage.js","components/NoteDetailPage/index.js"],"names":["module","exports","container","title","subTitle","content","NoteDetailPage","state","id","getComponentOnType","_ref","key","data","react_default","a","createElement","className","styles","style","width","NoteDetailPage_Component","code","this","setState","props","match","params","replace","location","hash","slice","notes","length","some","note","noteGetOne","noteFetchRequested","_this2","_this$props","currentNote","fetchLoading","Loading","hasOwnProperty","article","Array","isArray","map","Object","keys","React","Component","connect","dispatch","_ref2","prism_async_light","customStyle","language","atomDark","showLineNumbers","wrapLines"],"mappings":"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","file":"static/js/164.d74e2fa6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoteDetailPage_container__8frlM\",\"title\":\"NoteDetailPage_title__1xMpM\",\"subTitle\":\"NoteDetailPage_subTitle__33w4r\",\"content\":\"NoteDetailPage_content__26JwK\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { PrismAsyncLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nimport styles from './index.module.css';\nimport Loading from '../Loading';\nimport { noteGetOne, noteFetchRequested } from '../../actions/notes';\n\nclass NoteDetailPage extends React.Component {\n  state = {\n    title: '',\n    id: ''\n  };\n  componentDidMount() {\n    this.setState({ title: this.props.match.params.title.replace(/-/g, ' ') });\n    const id = this.props.location.hash.slice(1);\n    this.setState({ id });\n    if (this.props.notes.length) {\n      const note = this.props.notes.some(note => note.id === id);\n      if (note) {\n        this.props.noteGetOne(id);\n      } else {\n        this.props.noteFetchRequested(id);\n      }\n    } else {\n      this.props.noteFetchRequested(id);\n    }\n  }\n\n  getComponentOnType = ({ key, data }) => {\n    switch (key) {\n      case 'title':\n        return (\n          <div key=\"title\" className={styles.title}>\n            {data.title}\n          </div>\n        );\n\n      case 'subTitle':\n        return (\n          <div key=\"subTitle\" className={styles.subTitle}>\n            {data.subTitle}\n          </div>\n        );\n\n      case 'content':\n        return (\n          <div key=\"subTitle\" className={styles.content}>\n            {data.content}\n          </div>\n        );\n\n      case 'code':\n        return (\n          <div style={{ width: 'auto' }}>\n            <Component data={data.code} />\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    const { currentNote, fetchLoading } = this.props;\n    return fetchLoading ? (\n      <div className=\"center\">\n        <Loading />\n      </div>\n    ) : (\n      <div className={styles.container}>\n        {currentNote &&\n        currentNote.hasOwnProperty('article') &&\n        currentNote.article &&\n        Array.isArray(currentNote.article)\n          ? currentNote.article.map(data => {\n              return this.getComponentOnType({\n                key: Object.keys(data)[0],\n                data\n              });\n            })\n          : null}\n        {currentNote &&\n          !currentNote.hasOwnProperty('article') && [\n            <div key=\"title\" className={styles.title}>\n              {currentNote.title}\n            </div>,\n            <div key=\"sub-title\" className={styles.subTitle}>\n              {currentNote.subTitle}\n            </div>,\n            <article key=\"content\" className={styles.content}>\n              {currentNote.content}\n            </article>,\n            <div key=\"code\" style={{ width: 'auto' }}>\n              {currentNote && currentNote.code && (\n                <Component data={currentNote.code} />\n              )}\n            </div>\n          ]}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes.notes,\n  currentNote: state.notes.currentNote,\n  fetchLoading: state.notes.fetchLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  noteGetOne: data => dispatch(noteGetOne(data)),\n  noteFetchRequested: data => dispatch(noteFetchRequested(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NoteDetailPage);\n\nconst Component = ({ data }) => {\n  return (\n    <SyntaxHighlighter\n      customStyle={{ width: '100%' }}\n      language=\"javascript\"\n      style={atomDark}\n      // atomDark\n      // prism\n      // twilight\n      // tomorrow\n      // solarizedlight\n      // okaidia\n      // funky\n      // dark\n      // coy\n      showLineNumbers={false}\n      wrapLines={true}\n    >\n      {data}\n    </SyntaxHighlighter>\n  );\n};\n","import NoteDetailPage from './NoteDetailPage';\n\nexport default NoteDetailPage;\n"],"sourceRoot":""}