{"version":3,"sources":["components/NoteDetailPage/CodeHighlighter.js","components/NoteDetailPage/NoteDetailPage.js","components/NoteDetailPage/index.js","components/NoteDetailPage/index.module.css"],"names":["CodeHighlighter","_ref","data","react_default","a","createElement","prism_async_light","customStyle","width","language","style","atomDark","showLineNumbers","wrapLines","NoteDetailPage","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","title","id","getComponentOnType","key","index","className","styles","subTitle","content","text","_ref2","html","code","dangerouslySetInnerHTML","__html","snarkdown","markdown","inherits","createClass","value","setState","props","match","params","replace","location","hash","slice","notes","some","note","noteGetOne","noteFetchRequested","_this2","_this$props","currentNote","fetchLoading","Loading","container","hasOwnProperty","article","isArray","map","keys","React","Component","connect","dispatch","module","exports"],"mappings":"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","file":"static/js/167.2726bfba.chunk.js","sourcesContent":["import React from 'react';\nimport { PrismAsyncLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nexport default ({ data }) => {\n  return (\n    <SyntaxHighlighter\n      customStyle={{ width: '100%' }}\n      language=\"javascript\"\n      style={atomDark}\n      // atomDark\n      // prism\n      // twilight\n      // tomorrow\n      // solarizedlight\n      // okaidia\n      // funky\n      // dark\n      // coy\n      showLineNumbers={false}\n      wrapLines={true}\n    >\n      {data}\n    </SyntaxHighlighter>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport snarkdown from 'snarkdown';\n\nimport styles from './index.module.css';\nimport Loading from '../Loading';\nimport { noteGetOne, noteFetchRequested } from '../../actions/notes';\nimport CodeHighlighter from './CodeHighlighter';\n\nexport class NoteDetailPage extends React.Component {\n  state = {\n    title: '',\n    id: ''\n  };\n  componentDidMount() {\n    this.setState({ title: this.props.match.params.title.replace(/-/g, ' ') });\n    const id = this.props.location.hash.slice(1);\n    this.setState({ id });\n    if (this.props.notes.length) {\n      const note = this.props.notes.some(note => note.id === id);\n      if (note) {\n        this.props.noteGetOne(id);\n      } else {\n        this.props.noteFetchRequested(id);\n      }\n    } else {\n      this.props.noteFetchRequested(id);\n    }\n  }\n\n  getComponentOnType = ({ key, data, index }) => {\n    switch (key) {\n      case 'title':\n        return (\n          <div key={index} className={styles.title}>\n            {data.title}\n          </div>\n        );\n\n      case 'subTitle':\n        return (\n          <div key={index} className={styles.subTitle}>\n            {data.subTitle}\n          </div>\n        );\n\n      case 'content':\n        return (\n          <div key={index} className={styles.content}>\n            {data.content}\n          </div>\n        );\n\n      case 'text':\n        return (\n          <div key={index} className={styles.text}>\n            {data.text}\n          </div>\n        );\n\n      case 'html':\n        return ({ index }) => data.html;\n\n      case 'code':\n        return (\n          <div key={index} className={styles.code}>\n            <CodeHighlighter data={data.code} />\n          </div>\n        );\n\n      case 'markdown':\n        return (\n          <div\n            key={index}\n            dangerouslySetInnerHTML={{ __html: snarkdown(data.markdown) }}\n          ></div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    const { currentNote, fetchLoading } = this.props;\n    return fetchLoading ? (\n      <div className=\"center\">\n        <Loading />\n      </div>\n    ) : (\n      <div className={styles.container}>\n        {currentNote &&\n        currentNote.hasOwnProperty('article') &&\n        currentNote.article &&\n        Array.isArray(currentNote.article)\n          ? currentNote.article.map((data, index) => {\n              return this.getComponentOnType({\n                key: Object.keys(data)[0],\n                data,\n                index\n              });\n            })\n          : null}\n        {currentNote &&\n          !currentNote.hasOwnProperty('article') && [\n            <div key=\"title\" className={styles.title}>\n              {currentNote.title}\n            </div>,\n            <div key=\"sub-title\" className={styles.subTitle}>\n              {currentNote.subTitle}\n            </div>,\n            <article key=\"content\" className={styles.content}>\n              {currentNote.content}\n            </article>,\n            <div key=\"code\" className={styles.code}>\n              {currentNote && currentNote.code && (\n                <CodeHighlighter data={currentNote.code} />\n              )}\n            </div>\n          ]}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes.notes,\n  currentNote: state.notes.currentNote,\n  fetchLoading: state.notes.fetchLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  noteGetOne: data => dispatch(noteGetOne(data)),\n  noteFetchRequested: data => dispatch(noteFetchRequested(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NoteDetailPage);\n","import NoteDetailPage from './NoteDetailPage';\n\nexport default NoteDetailPage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoteDetailPage_container__8frlM\",\"title\":\"NoteDetailPage_title__1xMpM\",\"subTitle\":\"NoteDetailPage_subTitle__33w4r\",\"content\":\"NoteDetailPage_content__26JwK\",\"text\":\"NoteDetailPage_text__1wDJc\",\"code\":\"NoteDetailPage_code__7s1UC\"};"],"sourceRoot":""}