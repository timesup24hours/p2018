{"version":3,"sources":["components/MortageDashboard/components/Header/Center/index.js","components/MortageDashboard/components/Header/Right/Profile/index.js","components/MortageDashboard/components/Header/Right/index.js","components/MortageDashboard/components/Header/index.js","components/MortageDashboard/components/Menu/route.js","components/MortageDashboard/components/Main/MainBody/Simulation/Score/index.tsx","components/MortageDashboard/components/Main/MainBody/Simulation/Level/LevelButton.js","components/MortageDashboard/components/Main/MainBody/Simulation/Level/index.js","components/MortageDashboard/components/Main/MainBody/Simulation/Chart/Performance/index.tsx","components/MortageDashboard/components/Main/MainBody/Simulation/Chart/Rate/index.js","components/MortageDashboard/components/Main/MainBody/Simulation/Chart/BarChart/options.js","components/MortageDashboard/components/Main/MainBody/Simulation/Chart/BarChart/setColors.js","components/MortageDashboard/components/Main/MainBody/Simulation/Chart/BarChart/settingDataSets.js","components/MortageDashboard/components/Main/MainBody/Simulation/Chart/BarChart/index.tsx","components/MortageDashboard/components/Main/MainBody/Simulation/Calculator/util.js","components/MortageDashboard/components/Main/MainBody/Simulation/Chart/index.tsx","components/MortageDashboard/components/Main/MainBody/Simulation/Chart/util.ts","components/MortageDashboard/components/Main/MainBody/Simulation/Calculator/InputRange/index.js","components/MortageDashboard/components/Main/MainBody/Simulation/Calculator/Period/index.js","components/MortageDashboard/components/Main/MainBody/Simulation/Calculator/Buttons/index.tsx","components/MortageDashboard/components/Main/MainBody/Simulation/Calculator/index.js","components/MortageDashboard/components/Main/MainBody/Simulation/index.js","components/MortageDashboard/components/Main/MainHeader/HeaderName/index.js","components/MortageDashboard/components/Main/MainHeader/Stepper/CheckMark.js","components/MortageDashboard/components/Tooltip/index.js","components/MortageDashboard/components/Main/MainHeader/Stepper/Pointer.js","components/MortageDashboard/components/Main/MainHeader/Stepper/Circle.js","components/MortageDashboard/components/Main/MainHeader/Stepper/index.js","components/MortageDashboard/components/Button/ContinueButton/index.js","components/MortageDashboard/components/Main/MainHeader/Continue/index.js","components/MortageDashboard/components/Main/MainHeader/index.js","components/MortageDashboard/components/Main/index.js","components/MortageDashboard/index.js"],"names":["Header_Center","react_default","a","createElement","className","Right_Profile","Header_Right","components_Header","route","NavLink","exact","to","activeClassName","Tooltip","title","placement","Score","_ref","monthlyPayment","concat","toFixed","LevelButton","value","handleOnClick","active","id","label","onClick","e","Level","state","levels","_this","forEach","d","target","setState","_this2","this","map","i","key","React","Component","Performance","name","year","percent","color","style","Chart_Rate","width","Number","options","responsive","maintainAspectRatio","barThickness","legend","display","layout","padding","left","right","top","bottom","scales","yAxes","barPercentage","categoryPercentage","gridLines","offsetGridLines","drawBorder","ticks","callback","index","values","stacked","beginAtZero","max","steps","stepSize","major","fontColor","fontSize","minor","xAxes","lineWidth","setColors","data","backgroundColors","settingDataSets","dataSets","dataArray","push","backgroundColor","borderWidth","BarChart","selectedIndex","paymentDataArray","barData","defaultBarData","setData","labels","datasets","es","length","height","convertToPercentage","addSign","arguments","undefined","tempArray","split","toString","addPercentageSign","join","takeNumberOnly","replace","calcInterest","rate","loanPrincipal","_ref$numberOfPayments","numberOfPayments","parseFloat","convertToDollarFormat","formatted","toLocaleString","getFirstHalfYearOrLatterHalf","isFirstSixMonths","Chart","_React$useState","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","_React$useState3","_React$useState4","setSelectedIndex","_React$useState5","_React$useState6","setIsFirstSixMonths","years","Array","from","yearOnClickToggle","event","node","currentTarget","classList","contains","otherNode","document","querySelector","toggle","_ref2","monthlyInterestArray","monthlyPrincipleArray","monthlyNewBlanceArray","interestPaidMonthly","interestRate","mortage","downPayment","loanBalance","newBalance","repayment","interest","paymentData","principlePaid","interestPaid","month","currentSelectedMonthlyInterestArray","filter","currentSelectedMonthlyPrincipleArray","paymentBarChartData","biggestInterest","Math","apply","toConsumableArray","biggestPrinciple","yAxis","ceil","totalInterestPaid","reduce","accumulator","currentValue","totalPrinciplePaid","getSummaryData","c","aria-controls","aria-haspopup","Menu","keepMounted","open","Boolean","onClose","option","MenuItem","selected","handleMenuItemClick","Simulation_Chart_BarChart","Simulation_Chart_Performance","Date","getFullYear","InputRangeComponent","displayValue","onChange","min","edit","_useState","_useState2","inputValue","setInputvalue","_useState3","_useState4","maxValue","setMaxValue","_useState5","_useState6","minValue","setMinValue","useEffect","position","htmlFor","type","aria-label","aria-required","border","textAlign","outline","marginRight","zIndex","targetValue","MAX_SAFE_INTEGER","sign","js_default","Calculator_Period","Buttons","handleCancel","handleDefault","justifyContent","initialState","yearValue","Calculator","targetOnchange","initialDepositOnchange","monthlyPaymentOnchange","monthlyInterestRate","totalMonths","pow","props","renderProp","Calculator_InputRange","Simulation_Calculator_Buttons","initialData","MainBody_Simulation","MainBody_Simulation_Score","Level_Level","Calculator_Calculator","MainBody_Simulation_Chart","styles","container","alignItems","gridArea","MainHeader_HeaderName","stepName","checkmark","fontFamily","transform","lineHeight","fontWeight","checked","borderRadius","boxShadow","CheckMark","MortageDashboard_components_Tooltip","stepNumber","headerName","href","pointer","Pointer","step","circle","line","transition","Circle","current","last","objectSpread","MainHeader_Stepper","stepData","currentStep","Button_ContinueButton","MainHeader_Continue","MainHeader","_this$state","newStepData","_this$state2","components_Main","MainHeader_MainHeader","App","documentElement","setProperty"],"mappings":"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","file":"static/js/157.e713e787.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nexport default () => {\n  return (\n    <div className=\"center_container\">\n      <div className=\"center_state\">\n        <span className=\"center_state_span\">CA</span>\n      </div>\n      <div className=\"center_house_status\">New House</div>\n      <div className=\"center_house_grid\">\n        <i className=\"fas fa-th center_icon\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './index.css';\n\nexport default () => (\n  <div className=\"profile_container\">\n    <div className=\"profile_avatar\">\n      <i className=\"far fa-user-circle\" />\n    </div>\n    <div className=\"profile_name\">Huanlin Huang</div>\n    <div className=\"profile_dropown_menu\" />\n  </div>\n);\n","import React from 'react';\nimport Profile from './Profile';\nimport './index.css';\n\nexport default () => {\n  return (\n    <div className=\"header_right_container\">\n      <div className=\"header_right_notification\">\n        <i className=\"far fa-bell\" />\n      </div>\n      <div className=\"header_right_profile\">\n        <Profile />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport Center from './Center';\nimport Right from './Right';\nimport './index.css';\n\nexport default () => {\n  return (\n    <header className=\"InternshipProject_header header_container\">\n      <div className=\"header_item header_item_left\" />\n      <div className=\"header_item header_item_center\">\n        <Center />\n      </div>\n      <div className=\"header_item header_item_right\">\n        <Right />\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport './styles.scss';\n\nexport default () => {\n  return (\n    <menu className=\"InternshipProject_menu\">\n      <div className=\"menu_switch\">\n        <NavLink exact to=\"/\" className=\"menu_link\">\n          <i className=\"fas fa-bars\" />\n        </NavLink>\n      </div>\n      <div className=\"menu_list\">\n        <NavLink\n          exact\n          to=\"/\"\n          className=\"menu_link\"\n          activeClassName=\"link_active\"\n        >\n          <Tooltip title=\"Home\" placement=\"left\">\n            <i className=\"fas fa-home\" />\n          </Tooltip>\n        </NavLink>\n        <NavLink\n          exact\n          to=\"/dashboard_ui\"\n          className=\"menu_link\"\n          activeClassName=\"link_active\"\n        >\n          <Tooltip title=\"Current page UI only\" placement=\"left\">\n            <i className=\"fas fa-wallet\" />\n          </Tooltip>\n        </NavLink>\n        <NavLink\n          exact\n          to=\"/css_effects\"\n          className=\"menu_link\"\n          activeClassName=\"link_active\"\n        >\n          <Tooltip title=\"Back\" placement=\"left\">\n            <i className=\"far fa-square\" />\n          </Tooltip>\n        </NavLink>\n        <NavLink\n          exact\n          to=\"/contact_info\"\n          className=\"menu_link\"\n          activeClassName=\"link_active\"\n        >\n          <Tooltip title=\"Contact\" placement=\"left\">\n            <i className=\"fas fa-phone\" />\n          </Tooltip>\n        </NavLink>\n      </div>\n    </menu>\n  );\n};\n","import React from 'react';\nimport './index.scss';\n\nconst Score = ({ monthlyPayment }: any): JSX.Element => (\n  <div className=\"mainBody_score flex_center\">\n    <div className=\"mainBody_score_body flex_center\">\n      <i className=\"fas fa-user\" />\n      <span className=\"grey_font\">\n        {`Monthly payment: $${monthlyPayment.toFixed(2)}`}\n      </span>\n    </div>\n  </div>\n);\nexport default Score;\n","import React from 'react';\nimport './index.css';\n\nexport default ({ value, handleOnClick }) => {\n  return (\n    <div\n      className={`mainBody_level_body_items flex_row_center ${\n        value.active ? 'active' : ''\n      }`}\n      id={value.label}\n      onClick={e => handleOnClick(e, value)}\n    >\n      <div id={value.label} onClick={e => handleOnClick(e, value)} />\n      <span\n        id={value.label}\n        onClick={e => handleOnClick(e, value)}\n        className=\"main_body_black_font\"\n      >\n        {value.label}\n      </span>\n    </div>\n  );\n};\n","import React from 'react';\nimport './index.css';\nimport LevelButton from './LevelButton';\n\nexport default class Level extends React.Component {\n  state = {\n    levels: [\n      { label: 'Conservative', id: 1, active: false },\n      { label: 'Balanced', id: 2, active: false },\n      { label: 'Mortage', id: 3, active: true },\n      { label: 'Extreme', id: 4, active: false }\n    ]\n  };\n\n  handleOnClick = (e, value) => {\n    if (value.id !== 3) return;\n    const { levels } = this.state;\n    levels.forEach(d => {\n      d.active = false;\n      if (d.label === e.target.id) {\n        d.active = true;\n      }\n    });\n    this.setState({ levels });\n  };\n\n  render() {\n    const { levels } = this.state;\n    return (\n      <div className=\"mainBody_level flex_center\">\n        <div className=\"mainBody_level_body\">\n          {levels.map((value, i) => {\n            return (\n              <LevelButton\n                key={`${value.label}${i}`}\n                value={value}\n                handleOnClick={this.handleOnClick}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './index.scss';\n\ninterface PerformanceProps {\n  name: string;\n  year: number | string;\n  percent: number | string;\n  color?: string | undefined;\n}\n\nconst Performance = ({\n  name,\n  year,\n  percent,\n  color\n}: PerformanceProps): JSX.Element => {\n  return (\n    <div className=\"mainBody_chart_performance\">\n      <div className=\"mainBody_chart_performance_header\">\n        <div>{name}</div>\n        <div className=\"mainBody_chart_performance_header_year\">{year}</div>\n      </div>\n      <div className=\"mainBody_chart_performance_number\">\n        <div\n          style={{\n            // color: Number(percent) < 0 ? 'red' : 'var(--main-header-blue-color)'\n            color: color ? color : 'var(--main-header-blue-color)'\n          }}\n        >\n          {percent}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Performance;\n","import React from 'react';\nimport './index.css';\n\nexport default ({ percent }) => (\n  <div className=\"chart_performance_rate_container\">\n    <div className=\"chart_performance_rate_header\">\n      <div className=\"chart_performance_rate_name\">Rate</div>\n      <div className=\"chart_performance_rate_percent\">{percent}%</div>\n    </div>\n    <div className=\"chart_performance_rate\">\n      <div style={{ width: `${Number(percent)}%` }} />\n    </div>\n  </div>\n);\n","export default {\n  responsive: true,\n  maintainAspectRatio: true,\n  barThickness: 1,\n  legend: {\n    display: false\n  },\n  layout: {\n    padding: {\n      left: 50,\n      right: 50,\n      top: 0,\n      bottom: 0\n    }\n  },\n  scales: {\n    yAxes: [\n      {\n        barPercentage: 0.1,\n        categoryPercentage: 0.1,\n        gridLines: {\n          offsetGridLines: false,\n          color: 'none',\n          // borderDash: [1, 2, 3],\n          // lineWidth: 0.01,\n          drawBorder: false\n        },\n        ticks: {\n          callback: function(value, index, values) {\n            // const newValue = Number(value / 1000);\n            return `$${value}k        `;\n            // return `$${value}        `;\n          },\n          display: true,\n          stacked: true,\n          beginAtZero: false,\n          // min: 10,\n          max: 30,\n          steps: 10,\n          stepSize: 10,\n          major: {\n            fontColor: '#666',\n            fontSize: '100'\n          },\n          minor: {\n            fontColor: '#666'\n            // fontSize: '100'\n          }\n        }\n      }\n    ],\n    xAxes: [\n      {\n        barPercentage: 0.3,\n        categoryPercentage: 1.05,\n        // barThickness: 5,\n        gridLines: {\n          offsetGridLines: false,\n          lineWidth: 0.01\n        }\n      }\n    ]\n  }\n};\n","export default (data, i, color) => {\n  const backgroundColors = [];\n  data.forEach((value, index) => {\n    if (color) {\n      if (i === 0) {\n        backgroundColors[index] = 'rgb(93, 134, 255)';\n      } else if (i === 1) {\n        backgroundColors[index] = 'rgb(255, 0, 0)';\n      }\n    } else {\n      if (value > 10) {\n        backgroundColors[index] = 'rgb(93, 134, 255)';\n      } else {\n        backgroundColors[index] = 'rgb(255, 0, 0)';\n      }\n    }\n    // if (i === 0) {\n    //   backgroundColors[index] = 'rgb(93, 134, 255)';\n    // } else if (i === 1) {\n    //   backgroundColors[index] = 'rgb(255, 0, 0)';\n    // } else if (i === 2) {\n    //   backgroundColors[index] = 'purple';\n    // }\n  });\n  return backgroundColors;\n};\n","import setColors from './setColors';\n\nfunction isEven(n) {\n  return n % 2 == 0;\n}\nexport default (dataSets, color) => {\n  const dataArray = [];\n  if (color) {\n    dataSets.forEach((d, i) => {\n      dataArray.push({\n        // stack: 'stack1',\n        label: d.label,\n        data: d.data,\n        backgroundColor: setColors(d.data, i, color),\n        borderWidth: 0\n      });\n    });\n  } else {\n    dataSets.forEach((d, i) => {\n      dataArray.push({\n        // stack: 'stack1',\n        label: i,\n        data: d,\n        backgroundColor: setColors(d, i),\n        borderWidth: 0\n      });\n    });\n  }\n  return dataArray;\n};\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport './index.css';\nimport options from './options';\nimport settingDataSets from './settingDataSets';\n\ninterface Props {\n  data: {\n    monthlyPayment: number;\n    mortage: number;\n    downPayment: number;\n    interestRate: number;\n    year: number;\n  };\n  setData: Function;\n  barData: {};\n  paymentDataArray: any[];\n  selectedIndex: number;\n}\n\nconst BarChart = ({\n  selectedIndex,\n  paymentDataArray,\n  barData,\n  data,\n  setData\n}: Props): JSX.Element => {\n  const dataSets = [\n    [21, 21, 25, 21, 25],\n    [-7, 25, -5, 25, 21],\n    [25, 21, 25, 25, 25]\n  ];\n\n  const defaultBarData = {\n    labels: ['1993', '1998', '2003', '2008', '2013'],\n    datasets: settingDataSets(dataSets)\n  };\n\n  return (\n    <div className=\"mainBody_chart_manifest\">\n      <Bar\n        data={paymentDataArray.length ? barData : defaultBarData}\n        width={100}\n        height={50}\n        options={options}\n      />\n    </div>\n  );\n};\nexport default BarChart;\n","export const addPercentageSign = value => {\n  if (typeof value === 'number') value = value.toString();\n  return value + '%';\n};\n\nexport const convertToPercentage = (value, addSign = true) => {\n  let formatted = `${Number(~~value)}`;\n  let tempArray = formatted.split('');\n  if (tempArray.length === 1) {\n    tempArray = ['0.', '0', `${tempArray[0]}`];\n  } else if (tempArray.length === 2) {\n    tempArray = ['0.', `${tempArray[0]}`, `${tempArray[1]}`];\n  } else {\n    tempArray = [`${tempArray[0]}.`, `${tempArray[1]}`, `${tempArray[2]}`];\n  }\n  if (addSign) return addPercentageSign(tempArray.join(''));\n  return tempArray.join('');\n};\n\nexport const takeNumberOnly = value => {\n  if (typeof value === 'number') value = value.toString();\n  return ~~value.replace(/[^0-9]/g, '');\n};\n\n// Divide your interest rate by the number of payments you’ll make in the year (interest rates are expressed annually). So, for example, if you’re making monthly payments, divide by 12.\n// https://mozo.com.au/interest-rates/guides/calculate-interest-on-loan\nexport const calcInterest = ({\n  rate,\n  loanPrincipal,\n  numberOfPayments = 12\n}) => {\n  const getFloatRate = parseFloat(\n    convertToPercentage(rate, false) * 0.01\n  ).toFixed(4);\n  return (getFloatRate / numberOfPayments) * loanPrincipal;\n};\n\n// new balance\nexport const calcNewPrincipal = ({ loanPrincipal, repayment, interest }) => {\n  return loanPrincipal - (repayment - interest);\n};\n\nexport const convertToDollarFormat = (value, percent) => {\n  let formatted = `${Number(~~value).toLocaleString('en')}`;\n  if (percent) {\n    formatted = formatted + '%';\n  } else {\n    formatted = '$' + formatted;\n  }\n  return formatted;\n};\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport './index.scss';\nimport Performance from './Performance';\nimport Rate from './Rate';\nimport BarChart from './BarChart';\n\nimport options from './BarChart/options';\nimport settingDataSets from './BarChart/settingDataSets';\nimport {\n  calcInterest,\n  calcNewPrincipal,\n  convertToDollarFormat\n} from '../Calculator/util';\nimport { getSummaryData } from './util';\n\nexport interface PaymentArray {\n  loanBalance: number;\n  principlePaid: number;\n  interestPaid: number;\n  month: number;\n}\n\ninterface Props {\n  data: {\n    monthlyPayment: number;\n    mortage: number;\n    downPayment: number;\n    interestRate: number;\n    year: number;\n  };\n  setData: Function;\n  barData: {};\n}\n\nconst getFirstHalfYearOrLatterHalf = (\n  index: number,\n  selectedIndex: number,\n  isFirstSixMonths: boolean\n): boolean => {\n  if (isFirstSixMonths) {\n    return index >= selectedIndex * 12 && index < selectedIndex * 12 + 6;\n  } else {\n    return index >= selectedIndex * 12 + 6 && index < selectedIndex * 12 + 12;\n  }\n};\n\nconst Chart = ({ data, setData }: Props): JSX.Element => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const [isFirstSixMonths, setIsFirstSixMonths] = React.useState(true);\n  const years = Array.from({ length: data.year ? data.year : 15 }, () => 0);\n\n  function handleClick(event: React.MouseEvent<HTMLElement>): void {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose(): void {\n    setAnchorEl(null);\n  }\n\n  const yearOnClickToggle = (event: React.MouseEvent<HTMLElement>): void => {\n    const node = event.currentTarget;\n    if (node!.classList.contains('mainBody_chart_year_left')) {\n      if (!node!.classList.contains('year_active')) return;\n      const otherNode = document.querySelector('.mainBody_chart_year_right');\n      node.classList.toggle('year_active');\n      otherNode!.classList.toggle('year_active');\n      setIsFirstSixMonths(true);\n    } else {\n      const otherNode = document.querySelector('.mainBody_chart_year_left');\n      if (!node!.classList.contains('year_active')) return;\n      node.classList.toggle('year_active');\n      otherNode!.classList.toggle('year_active');\n      setIsFirstSixMonths(false);\n    }\n  };\n\n  function handleMenuItemClick(\n    event: React.MouseEvent<HTMLElement>,\n    index: number\n  ): void {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n  }\n\n  // console.log('data: ', data);\n  const paymentDataArray: PaymentArray[] = [];\n  const monthlyInterestArray = [];\n  const monthlyPrincipleArray = [];\n  const monthlyNewBlanceArray = [];\n  if (data.year)\n    for (let i = 0; i < data.year * 12; i++) {\n      const interestPaidMonthly = calcInterest({\n        rate: data.interestRate,\n        loanPrincipal:\n          paymentDataArray.length === 0\n            ? data.mortage - data.downPayment\n            : paymentDataArray[i - 1].loanBalance\n      });\n      const newBalance = calcNewPrincipal({\n        loanPrincipal:\n          paymentDataArray.length === 0\n            ? data.mortage - data.downPayment\n            : paymentDataArray[i - 1].loanBalance,\n        repayment: data.monthlyPayment,\n        interest: interestPaidMonthly\n      });\n      monthlyInterestArray.push(Number(interestPaidMonthly.toFixed(2)));\n      monthlyPrincipleArray.push(\n        Number((data.monthlyPayment - interestPaidMonthly).toFixed(2))\n      );\n      monthlyNewBlanceArray.push(\n        Number(newBalance.toFixed(2)) < 0 ? 0 : Number(newBalance.toFixed(2))\n      );\n      const paymentData = {\n        loanBalance:\n          Number(newBalance.toFixed(2)) < 0 ? 0 : Number(newBalance.toFixed(2)),\n        principlePaid: Number(\n          (data.monthlyPayment - interestPaidMonthly).toFixed(2)\n        ),\n        interestPaid: Number(interestPaidMonthly.toFixed(2)),\n        month: i + 1\n      };\n      paymentDataArray.push(paymentData);\n    }\n  const currentSelectedMonthlyInterestArray = monthlyInterestArray.filter(\n    (data, index): boolean =>\n      getFirstHalfYearOrLatterHalf(index, selectedIndex, isFirstSixMonths)\n  );\n  const currentSelectedMonthlyPrincipleArray = monthlyPrincipleArray.filter(\n    (data, index): boolean =>\n      getFirstHalfYearOrLatterHalf(index, selectedIndex, isFirstSixMonths)\n  );\n  const currentSelectedMonthlyNewBlanceArray = monthlyNewBlanceArray.filter(\n    (data, index): boolean =>\n      getFirstHalfYearOrLatterHalf(index, selectedIndex, isFirstSixMonths)\n  );\n\n  // console.log('monthlyInterestArray: ', monthlyInterestArray);\n  // console.log('monthlyPrincipleArray: ', monthlyPrincipleArray);\n  // console.log('monthlyNewBlanceAbalancerray: ', monthlyNewBlanceArray);\n\n  const paymentBarChartData = [\n    { label: 'Principle($)', data: currentSelectedMonthlyPrincipleArray },\n    { label: 'Interest($)', data: currentSelectedMonthlyInterestArray }\n  ];\n  // console.log(paymentBarChartData);\n\n  const biggestInterest = Math.max(...currentSelectedMonthlyInterestArray);\n  const biggestPrinciple = Math.max(...currentSelectedMonthlyPrincipleArray);\n\n  if (paymentDataArray.length) {\n    let yAxis = Math.max(biggestInterest, biggestPrinciple);\n    yAxis = Math.ceil(yAxis);\n    options.scales.yAxes[0].ticks.max = yAxis;\n    options.scales.yAxes[0].ticks.stepSize = 500;\n    options.scales.yAxes[0].ticks.callback = function(\n      value,\n      index,\n      values\n    ): string {\n      // const newValue = Number(value / 1000);\n      // return `$${value}k        `;\n      return `$${value}        `;\n    };\n  }\n  const firstHalf = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n  const latterHalf = ['Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const barData = {\n    labels: isFirstSixMonths ? firstHalf : latterHalf,\n    datasets: settingDataSets(paymentBarChartData, true)\n  };\n\n  const summaryData = getSummaryData({ paymentDataArray });\n  // console.log('summaryData: ', summaryData);\n\n  // calc total from array\n  const totalInterestPaid = monthlyInterestArray.reduce((a, c) => a + c, 0);\n  const totalPrinciplePaid = monthlyPrincipleArray.reduce((a, c) => a + c, 0);\n\n  return (\n    <div className=\"mainBody_chart\">\n      <div className=\"mainBody_chart_container\">\n        <div className=\"mainBody_chart_left\">\n          <div className=\"mainBody_chart_left_header\">\n            <div>Year</div>\n            <div\n              className=\"chart_left_active\"\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n            >\n              {selectedIndex ? selectedIndex + 1 : 1}\n            </div>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {years.map(\n                (option, index): JSX.Element => (\n                  <MenuItem\n                    key={index}\n                    selected={index === selectedIndex}\n                    onClick={(event: React.MouseEvent<HTMLElement>): void =>\n                      handleMenuItemClick(event, index)\n                    }\n                  >\n                    {index + 1}\n                  </MenuItem>\n                )\n              )}\n            </Menu>\n          </div>\n          <BarChart\n            selectedIndex={selectedIndex}\n            data={data}\n            paymentDataArray={paymentDataArray}\n            barData={barData}\n            setData={setData}\n          />\n          <div className=\"mainBody_chart_years \">\n            <div\n              className=\"mainBody_chart_year_left year_active\"\n              onClick={yearOnClickToggle}\n            >\n              1 ~ 6 months\n            </div>\n            <div\n              className=\"mainBody_chart_year_right \"\n              onClick={yearOnClickToggle}\n            >\n              7 ~ 12 months\n            </div>\n          </div>\n        </div>\n        <div className=\"mainBody_chart_right\">\n          <div className=\"mainBody_chart_history\">SUMMARY</div>\n          <div className=\"mainBody_chart_info\">\n            <Performance\n              name=\"Total interest paid\"\n              year={`${data.year || 15}y`}\n              percent={\n                totalInterestPaid\n                  ? `${convertToDollarFormat(totalInterestPaid)}`\n                  : '+35.2%'\n              }\n              color=\"red\"\n            />\n            <Performance\n              name=\"Total principal paid\"\n              year={`${data.year || 15}y`}\n              percent={\n                totalPrinciplePaid\n                  ? `${convertToDollarFormat(data.mortage - data.downPayment)}`\n                  : '+65.2%'\n              }\n            />\n            <Performance\n              name=\"Interest + Principal\"\n              year={\n                data.year\n                  ? `Paid off by ${data.year + new Date().getFullYear()}`\n                  : new Date().getFullYear()\n              }\n              percent={\n                totalPrinciplePaid\n                  ? `${convertToDollarFormat(\n                      data.mortage - data.downPayment + totalInterestPaid\n                    )}`\n                  : '-20.2'\n              }\n              color=\"black\"\n            />\n            <Rate percent={33} />\n          </div>\n\n          <div className=\"mainBody_chart_moreView\">\n            <div>View More</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Chart;\n","import { PaymentArray } from './index';\n\ninterface SummaryData {\n  totalInterestPaid: number;\n  totalPrinciplePaid: number;\n}\n\ninterface GetSummaryDataProps {\n  paymentDataArray: PaymentArray[];\n}\n\nexport const getSummaryData = ({\n  paymentDataArray\n}: GetSummaryDataProps): SummaryData => {\n  return paymentDataArray.reduce(\n    (accumulator, currentValue): SummaryData => {\n      return {\n        totalInterestPaid:\n          accumulator.totalInterestPaid + currentValue.interestPaid,\n        totalPrinciplePaid:\n          accumulator.totalInterestPaid + currentValue.principlePaid\n      };\n    },\n    {\n      totalInterestPaid: 0,\n      totalPrinciplePaid: 0\n    }\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport InputRange from 'react-input-range';\nimport {\n  convertToPercentage,\n  takeNumberOnly,\n  convertToDollarFormat\n} from '../util';\n\nconst InputRangeComponent = ({\n  id,\n  name,\n  value,\n  displayValue,\n  onChange,\n  min,\n  max,\n  percent,\n  edit,\n  mortage,\n  downPayment\n}) => {\n  const [inputValue, setInputvalue] = useState(\n    displayValue ? displayValue : value\n  );\n  const [maxValue, setMaxValue] = useState(max);\n  const [minValue, setMinValue] = useState(min);\n  useEffect(() => {\n    setInputvalue(value);\n    setMaxValue(max);\n  }, [value, displayValue, max]);\n\n  return (\n    <div className=\"inputrange_container\">\n      <div className=\"inputrange_header\" style={{ position: 'relative' }}>\n        <label htmlFor={id} className=\"inputrange_name\">\n          {name}\n        </label>\n        <div\n          className=\"inputrange_number\"\n          style={{ position: 'absolute', right: '3px' }}\n        >\n          {percent\n            ? convertToPercentage(inputValue)\n            : convertToDollarFormat(inputValue, percent)}\n        </div>\n        <input\n          id={id}\n          type={percent ? 'number' : 'text'}\n          className=\"inputrange_number\"\n          value={inputValue}\n          aria-label={name}\n          aria-required=\"true\"\n          style={{\n            border: 'none',\n            textAlign: 'right',\n            outline: 'none',\n            width: '100px',\n            marginRight: '2px',\n            // opacity: '0',\n            color: 'rgba(0,0,0,0)',\n            backgroundColor: 'rgba(0,0,0,0)',\n            // caretColor: 'grey',\n            zIndex: '99'\n          }}\n          onClick={() => {\n            if (name === 'Down Payment' || name === 'Mortgage') {\n              onChange(0);\n              setInputvalue(0);\n            }\n          }}\n          onChange={e => {\n            const targetValue = e.target.value;\n            if (percent) {\n              if (targetValue > max) return;\n              if (targetValue < 0) return;\n              setInputvalue(targetValue);\n              onChange(targetValue);\n            } else {\n              const value = takeNumberOnly(targetValue);\n              if (value >= Number.MAX_SAFE_INTEGER || Math.sign(value) === -1)\n                return;\n              if (name === 'Down Payment' && value > mortage) return;\n              if (name === 'Mortgage') {\n                onChange(value);\n              } else if (name === 'Down Payment') {\n                onChange(value);\n              }\n              setInputvalue(value);\n              if (value > maxValue) setMaxValue(value);\n              if (value !== 0 && value < minValue) setMinValue(value);\n            }\n          }}\n        />\n      </div>\n      <div className=\"inputrange_body\">\n        <InputRange\n          maxValue={percent ? max : maxValue}\n          minValue={percent ? min : minValue}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  );\n};\nexport default InputRangeComponent;\n","import React from 'react';\nimport './index.scss';\n\nexport default ({ year, handleOnClick }) => {\n  return (\n    <div className=\"Period mainBody_calculator_period\">\n      <span className=\"mainBody_calculator_font mainBody_calculator_name\">\n        Period\n      </span>\n      <div className=\"mainBody_calculator_years\">\n        <button\n          className=\"flex_center mainBody_calculator_font_year_function noselect\"\n          id=\"decrease\"\n          onClick={e => handleOnClick(e)}\n        >\n          -\n        </button>\n        <div className=\"flex_center mainBody_calculator_font_year\">\n          {Number(year)} years\n        </div>\n        <button\n          className=\"flex_center mainBody_calculator_font_year_function noselect\"\n          id=\"increase\"\n          onClick={e => handleOnClick(e)}\n        >\n          +\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './index.scss';\n\ninterface ButtonsProps {\n  handleCancel: () => void;\n  handleDefault: () => void;\n}\nconst Buttons = ({\n  handleCancel,\n  handleDefault\n}: ButtonsProps): JSX.Element => (\n  <div\n    className=\"mainBody_calculator_buttons flex_row_center\"\n    style={{ justifyContent: 'flex-end' }}\n  >\n    {/* <div onClick={handleCancel} className=\"mainBody_calculator_buttons_cancel\">\n      Cancel\n    </div> */}\n    <button\n      onClick={handleDefault}\n      className=\"mainBody_calculator_buttons_default flex_center\"\n    >\n      Calculate\n    </button>\n  </div>\n);\nexport default Buttons;\n","import React from 'react';\nimport InputRange from './InputRange';\nimport './index.css';\nimport Period from './Period';\nimport Buttons from './Buttons';\nimport { convertToPercentage, takeNumberOnly } from './util';\n\nconst initialState = {\n  mortage: 200000,\n  downPayment: 0,\n  displayValue: 0,\n  interestRate: 3,\n  yearValue: 15,\n  monthlyPayment: 0\n};\nexport default class Calculator extends React.Component {\n  state = initialState;\n\n  targetOnchange = value => {\n    this.setState({ mortage: value });\n  };\n  initialDepositOnchange = value => {\n    // const downPayment = this.state.mortage * value * 0.01;\n    this.setState({ downPayment: value, displayValue: value });\n  };\n  monthlyPaymentOnchange = value => {\n    this.setState({ interestRate: value });\n  };\n\n  // https://www.wikihow.com/Calculate-Mortgage-Payments\n  monthlyPayment = ({ mortage, downPayment, interestRate, year }) => {\n    if (downPayment !== 0 && downPayment === undefined) {\n      downPayment = this.state.downPayment;\n    }\n    const rate = takeNumberOnly(interestRate, false);\n\n    const decimalRate = rate / 10000;\n    const monthlyInterestRate = decimalRate / 12;\n    const totalMonths = year * 12;\n    // console.log({ decimalRate, monthlyInterestRate, totalMonths, downPayment });\n    const upper =\n      monthlyInterestRate * Math.pow(monthlyInterestRate + 1, totalMonths);\n    const down = Math.pow(monthlyInterestRate + 1, totalMonths) - 1;\n\n    const monthlyPayment = (mortage - downPayment) * (upper / down);\n    this.setState({ monthlyPayment });\n    // console.log({ monthlyPayment, mortage, downPayment, interestRate, year });\n    if (this.props.renderProp)\n      this.props.renderProp({\n        monthlyPayment,\n        mortage,\n        downPayment,\n        interestRate,\n        year\n      });\n  };\n\n  handleOnClick = e => {\n    let { yearValue } = this.state;\n    if (e.target.id === 'increase') {\n      yearValue = yearValue + 15;\n      if (yearValue > 30) return;\n      this.setState({ yearValue });\n    } else {\n      yearValue = yearValue - 15;\n      if (yearValue < 5) return;\n      this.setState({ yearValue });\n    }\n    this.monthlyPayment({\n      mortage: this.state.mortage,\n      interestRate: this.state.interestRate,\n      year: yearValue\n    });\n  };\n\n  handleCancel = () => {};\n  handleDefault = () => {\n    this.monthlyPayment({\n      mortage: this.state.mortage,\n      interestRate: this.state.interestRate,\n      year: this.state.yearValue\n    });\n    // this.setState(initialState, () => {\n    //   this.monthlyPayment({\n    //     mortage: this.state.mortage,\n    //     interestRate: this.state.interestRate,\n    //     year: this.state.yearValue\n    //   });\n    // });\n  };\n\n  render() {\n    return (\n      <div className=\"mainBody_calculator flex_center\">\n        <div className=\"mainBody_calculator_body\">\n          <div className=\"mainBody_calculator_target\">\n            <InputRange\n              name=\"Mortgage\"\n              value={this.state.mortage || 0}\n              onChange={this.targetOnchange}\n              id=\"target\"\n              min={0}\n              max={1000000}\n              edit={true}\n              mortage={this.state.mortage}\n              downPayment={this.state.downPayment}\n            />\n          </div>\n          <div className=\"mainBody_calculator_deposit\">\n            <InputRange\n              name=\"Down Payment\"\n              displayValue={this.state.displayValue}\n              value={this.state.downPayment || 0}\n              onChange={this.initialDepositOnchange}\n              id=\"initialDeposit\"\n              min={0}\n              max={\n                this.state.mortage < this.state.downPayment\n                  ? this.state.downPayment\n                  : this.state.mortage\n              }\n              edit={true}\n              mortage={this.state.mortage}\n              downPayment={this.state.downPayment}\n            />\n          </div>\n          <div className=\"mainBody_calculator_payment\">\n            <InputRange\n              name=\"Interest Rate\"\n              value={this.state.interestRate}\n              onChange={this.monthlyPaymentOnchange}\n              id=\"monthlyPayment\"\n              min={1}\n              max={999}\n              percent={true}\n              edit={false}\n            />\n          </div>\n          <Period\n            year={this.state.yearValue}\n            handleOnClick={this.handleOnClick}\n          />\n          <Buttons\n            handleCancel={this.handleCancel}\n            handleDefault={this.handleDefault}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport './index.css';\nimport Score from './Score';\nimport Level from './Level';\nimport Chart from './Chart';\nimport Calculator from './Calculator';\n\nconst initialData = {\n  monthlyPayment: 0,\n  mortage: 0,\n  downPayment: 0,\n  interestRate: 0,\n  year: 0\n};\n\nexport default () => {\n  const [data, setData] = useState(initialData);\n  return (\n    <div className=\"mainBody_container\">\n      <Score monthlyPayment={data.monthlyPayment} />\n      <Level />\n      <Calculator\n        renderProp={({\n          monthlyPayment,\n          mortage,\n          downPayment,\n          interestRate,\n          year\n        }) =>\n          setData({\n            monthlyPayment,\n            mortage,\n            downPayment,\n            interestRate,\n            year\n          })\n        }\n      />\n      <Chart data={data} setData={setData} />\n    </div>\n  );\n};\n","import React from 'react';\nimport './index.css';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    gridArea: 'headerName'\n  }\n};\n\nexport default ({ stepName }) => (\n  <div className=\"main_header_name main_header_font\" style={styles.container}>\n    {stepName ? stepName : 'Mortage Calculator'}\n  </div>\n);\n","import React from 'react';\n\nconst styles = {\n  checkmark: {\n    fontFamily: 'arial',\n    // -ms-transform: scaleX(-1) rotate(-35deg); /* IE 9 */\n    // -webkit-transform: scaleX(-1) rotate(-35deg); /* Chrome, Safari, Opera */\n    transform: 'scaleX(-1) rotate(-45deg)',\n    color: 'white',\n    textAlign: 'center',\n    height: '25px',\n    width: '25px',\n    lineHeight: '24px',\n    fontSize: '.8em',\n    fontWeight: '900'\n  },\n  checked: {\n    height: '25px',\n    width: '25px',\n    backgroundColor: 'var(--main-header-blue-color)',\n    borderRadius: '50%',\n    display: 'inlineBlock',\n    boxShadow: '0px 2px 10px 2px rgba(93, 134, 255, 0.4)'\n  }\n};\nexport default () => (\n  <div style={styles.checked}>\n    <div style={styles.checkmark}>L</div>\n  </div>\n);\n","import React from 'react';\nimport './index.scss';\n\nexport default ({ stepNumber, headerName }) => (\n  <div className=\"Tooltip_container\">\n    <div className=\"up-arrow\" href=\"#\">\n      <div className=\"content\">\n        <span className=\"stepNumber\">{stepNumber}</span>\n        <span className=\"headerName\">{headerName}</span>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport Tooltip from '../../../Tooltip';\nimport './index.css';\n\nconst styles = {\n  pointer: {\n    position: 'absolute',\n    height: '25px',\n    width: '25px',\n    border: '8.2px solid white',\n    backgroundColor: 'var(--main-header-blue-color)',\n    borderRadius: '50%',\n    display: 'inlineBlock',\n    boxShadow: '0px 2px 10px 2px rgba(93, 134, 255, 0.3)'\n  }\n};\nexport default ({ step, label }) => {\n  return (\n    <div className=\"stepper_pointer\" style={styles.pointer}>\n      <Tooltip stepNumber={`Step ${step}`} headerName={label} />\n    </div>\n  );\n};\n","import React from 'react';\nimport CheckMark from './CheckMark';\nimport Pointer from './Pointer';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%'\n  },\n  circle: {\n    position: 'absolute',\n    height: '25px',\n    width: '25px',\n    border: '3px solid var(--main-header-grey-color)',\n    backgroundColor: 'var(--main-bg-color)',\n    borderRadius: '50%',\n    display: 'inlineBlock'\n  },\n  line: {\n    width: '100%',\n    height: '3px',\n    transition: 'background-color 1s'\n  }\n};\n\nexport default ({ label, checked, current, last, step }) => {\n  return (\n    <div\n      style={{\n        ...styles.container,\n        width: last ? '105px' : '100%'\n      }}\n    >\n      {current ? (\n        <Pointer label={label} step={step} />\n      ) : checked ? (\n        <CheckMark />\n      ) : (\n        <div style={styles.circle} />\n      )}\n      {last ? null : (\n        <div\n          style={{\n            ...styles.line,\n            backgroundColor: checked\n              ? 'var(--main-header-blue-color)'\n              : 'var(--main-header-grey-color)'\n          }}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport Circle from './Circle';\n\nexport default ({ stepData, currentStep }) => {\n  return (\n    <div className=\"main_header_stepper\">\n      {stepData.map((value, index) => {\n        return (\n          <Circle\n            key={index}\n            label={value.label}\n            checked={value.checked}\n            current={value.current}\n            last={value.last}\n            step={value.step}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import React from 'react';\nimport './index.css';\n\nexport default ({ handleOnClick }) => (\n  <div className=\"pointer_button\" onClick={() => handleOnClick()}>\n    <div className=\"pointer_button_font\">Continue</div>\n    <div className=\"pointer_button_arrow_container\">\n      <div className=\"arrow\" />\n    </div>\n  </div>\n);\n","import React from 'react';\nimport ContinueButton from '../../../Button/ContinueButton';\nimport './index.css';\n\nexport default ({ handleOnClick }) => {\n  return (\n    <div className=\"main_header_continue main_header_continue_container\">\n      <ContinueButton handleOnClick={handleOnClick} />\n    </div>\n  );\n};\n","import React from 'react';\nimport './index.css';\nimport HeaderName from './HeaderName';\nimport Stepper from './Stepper';\nimport Continue from './Continue';\n\nexport default class MainHeader extends React.Component {\n  state = {\n    currentStep: 3,\n    stepData: [\n      { label: '', checked: true, current: false, step: 1, last: false },\n      { label: '', checked: true, current: false, step: 2, last: false },\n      {\n        label: 'Calculator',\n        checked: false,\n        current: true,\n        step: 3,\n        last: false\n      },\n      { label: '', checked: false, current: false, step: 4, last: false },\n      { label: '', checked: false, current: false, step: 5, last: true }\n    ]\n  };\n\n  handleOnClick = () => {\n    let { currentStep, stepData } = this.state;\n    if (currentStep >= 5) return;\n    this.setState({ currentStep: currentStep + 1 }, () => {\n      const newStepData = stepData.map(d => {\n        if (this.state.currentStep - 1 === d.step) {\n          d.checked = true;\n          d.current = false;\n        }\n        if (this.state.currentStep === d.step) {\n          d.checked = false;\n          d.current = true;\n        }\n        return d;\n      });\n      this.setState({ stepData: newStepData });\n    });\n  };\n\n  render() {\n    const { stepData, currentStep } = this.state;\n    return (\n      <div className=\"main_header\">\n        <HeaderName />\n        <Stepper stepData={stepData} currentStep={currentStep} />\n        <Continue handleOnClick={this.handleOnClick} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './index.css';\n\nimport Simulation from './MainBody/Simulation';\nimport MainHeader from './MainHeader';\n\nexport default () => {\n  return (\n    <main className=\"InternshipProject_main\">\n      <MainHeader />\n      <Simulation />\n    </main>\n  );\n};\n","import React, { Component } from 'react';\nimport Header from './components/Header/index';\nimport Menu from './components/Menu/route';\nimport './index.css';\nimport Main from './components/Main';\n\nclass App extends Component {\n  componentDidMount() {\n    const node = document.querySelector('nav');\n    node.style.top = '-200px';\n    document.documentElement.style.setProperty('--nav-line-display', 'none');\n  }\n  componentWillUnmount() {\n    const node = document.querySelector('nav');\n    node.style.top = '0px';\n    document.documentElement.style.setProperty(\n      '--nav-line-display',\n      'inline-block'\n    );\n  }\n  render() {\n    return (\n      <div className=\"InternshipProject_App\">\n        <Header />\n        <Menu />\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}