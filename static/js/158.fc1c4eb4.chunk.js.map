{"version":3,"sources":["../node_modules/react-input-range/lib/js/utils/index.js","../node_modules/autobind-decorator/lib/index.js","../node_modules/chart.js/dist/Chart.js","../node_modules/react-input-range/lib/js/input-range/label.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/process/browser.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_createBaseEach.js","../node_modules/react-input-range/lib/js/index.js","../node_modules/react-input-range/lib/js/input-range/input-range.js","../node_modules/react-input-range/lib/js/input-range/value-transformer.js","../node_modules/react-input-range/lib/js/utils/captialize.js","../node_modules/react-input-range/lib/js/utils/clamp.js","../node_modules/react-input-range/lib/js/utils/distance-to.js","../node_modules/react-input-range/lib/js/utils/is-defined.js","../node_modules/react-input-range/lib/js/utils/is-number.js","../node_modules/react-input-range/lib/js/utils/is-object.js","../node_modules/react-input-range/lib/js/utils/length.js","../node_modules/react-input-range/lib/js/input-range/default-class-names.js","../node_modules/react-input-range/lib/js/input-range/range-prop-type.js","../node_modules/react-input-range/lib/js/input-range/value-prop-type.js","../node_modules/react-input-range/lib/js/input-range/slider.js","../node_modules/react-input-range/lib/js/input-range/track.js","../node_modules/react-input-range/lib/js/input-range/key-codes.js"],"names":["Object","defineProperty","exports","value","_captialize","__webpack_require__","enumerable","get","_interopRequireDefault","default","_clamp","_distanceTo","_isDefined","_isNumber","_isObject","_length","obj","__esModule","boundMethod","target","key","descriptor","fn","Error","definingProperty","configurable","this","prototype","hasOwnProperty","boundFn","bind","writable","_len","arguments","length","args","Array","_key","keys","undefined","Reflect","ownKeys","getOwnPropertyNames","getOwnPropertySymbols","concat","forEach","getOwnPropertyDescriptor","apply","module","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","i","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","func","arg","slice","call","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","type","result","source","prop","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","isArray","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","method","base","res","object","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","Label","_react2","_propTypes2","labelValue","formatLabel","children","classNames","labelContainer","propTypes","isRequired","objectOf","process","__webpack_exports__","Bar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","handleOnClick","chartInstance","_this$props","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","defaultProps","_props3","Component","oneOfType","number","arrayOf","bool","propName","componentName","_React$Component2","Doughnut","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","nextTick","browser","env","argv","version","versions","on","once","off","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","isObjectEmpty","createFromConfig","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","baseIsEqual","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","iteratee","accumulator","baseEach","baseForOwn","createBaseEach","isArrayLike","eachFunc","fromRight","iterable","_inputRange","_inputRange2","_class","_createClass","defineProperties","protoProps","staticProps","_autobindDecorator2","valueTransformer","newObj","_interopRequireWildcard","_defaultClassNames2","_label2","_rangePropType2","_valuePropType2","_slider2","_track2","_utils","_keyCodes","_applyDecoratedDescriptor","decorators","desc","decorator","InputRange","getPrototypeOf","startValue","trackNode","isSliderDragging","lastKeyMoved","allowSameValues","ariaLabelledby","ariaControls","disabled","draggableTrack","maxValue","minValue","onChangeStart","onChange","onChangeComplete","step","removeDocumentMouseUpListener","removeDocumentTouchEndListener","disabledInputRange","inputRange","getClientRect","getValueFromProps","isMultiValue","positions","getPositionsFromValues","getTrackClientRect","distanceTo","currentValues","isWithinRange","hasStepDifference","updatePositions","getValueFromPosition","transformedValues","getStepValueFromValue","updateValues","shouldUpdate","updateValue","ownerDocument","handleMouseUp","handleTouchEnd","getPositionFromEvent","updatePosition","prevEvent","_props$value","stepValue","prevPosition","prevValue","keyCode","LEFT_ARROW","DOWN_ARROW","preventDefault","decrementValue","RIGHT_ARROW","UP_ARROW","incrementValue","_props2$value","getKeyByPosition","isDefined","handleInteractionStart","handleInteractionEnd","addDocumentMouseUpListener","addDocumentTouchEndListener","percentages","getPercentagesFromValues","getKeys","percentage","onSliderDrag","handleSliderDrag","onSliderKeyDown","handleSliderKeyDown","_this4","captialize","componentClassName","getComponentClassName","aria-disabled","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","onMouseDown","handleMouseDown","onTouchStart","handleTouchStart","onTrackDrag","handleTrackDrag","onTrackMouseDown","handleTrackMouseDown","renderSliders","renderHiddenInputs","getPercentageFromPosition","clientRect","sizePerc","getPercentageFromValue","getPositionFromValue","clamp","valuePerStep","pointA","pointB","xDiff","yDiff","_typeof","Symbol","iterator","numA","numB","activeTrack","maxLabel","minLabel","slider","sliderContainer","track","valueLabel","Slider","removeDocumentMouseMoveListener","removeDocumentTouchMoveListener","handleMouseMove","handleTouchMove","addDocumentMouseMoveListener","addDocumentTouchMoveListener","aria-labelledby","aria-controls","aria-valuemax","aria-valuemin","aria-valuenow","draggable","role","tabIndex","Track","trackDragEvent","activeTrackStyle","getActiveTrackStyle"],"mappings":"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","file":"static/js/158.fc1c4eb4.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _captialize = require('./captialize');\n\nObject.defineProperty(exports, 'captialize', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_captialize).default;\n  }\n});\n\nvar _clamp = require('./clamp');\n\nObject.defineProperty(exports, 'clamp', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_clamp).default;\n  }\n});\n\nvar _distanceTo = require('./distance-to');\n\nObject.defineProperty(exports, 'distanceTo', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_distanceTo).default;\n  }\n});\n\nvar _isDefined = require('./is-defined');\n\nObject.defineProperty(exports, 'isDefined', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_isDefined).default;\n  }\n});\n\nvar _isNumber = require('./is-number');\n\nObject.defineProperty(exports, 'isNumber', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_isNumber).default;\n  }\n});\n\nvar _isObject = require('./is-object');\n\nObject.defineProperty(exports, 'isObject', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_isObject).default;\n  }\n});\n\nvar _length = require('./length');\n\nObject.defineProperty(exports, 'length', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_length).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","/**\n * @copyright 2015, Andrey Popp <8mayday@gmail.com>\n *\n * The decorator may be used on classes or methods\n * ```\n * @autobind\n * class FullBound {}\n *\n * class PartBound {\n *   @autobind\n *   method () {}\n * }\n * ```\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = autobind;\n\nfunction autobind() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length === 1) {\n    return boundClass.apply(undefined, args);\n  } else {\n    return boundMethod.apply(undefined, args);\n  }\n}\n/**\n * Use boundMethod to bind all methods on the target.prototype\n */\n\n\nfunction boundClass(target) {\n  // (Using reflect to get all keys including symbols)\n  var keys = undefined; // Use Reflect if exists\n\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    keys = Reflect.ownKeys(target.prototype);\n  } else {\n    keys = Object.getOwnPropertyNames(target.prototype); // use symbols if support is provided\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      keys = keys.concat(Object.getOwnPropertySymbols(target.prototype));\n    }\n  }\n\n  keys.forEach(function (key) {\n    // Ignore special case target method\n    if (key === 'constructor') {\n      return;\n    }\n\n    var descriptor = Object.getOwnPropertyDescriptor(target.prototype, key); // Only methods need binding\n\n    if (typeof descriptor.value === 'function') {\n      Object.defineProperty(target.prototype, key, boundMethod(target, key, descriptor));\n    }\n  });\n  return target;\n}\n/**\n * Return a descriptor removing the value and returning a getter\n * The getter will return a .bind version of the function\n * and memoize the result against a symbol on the instance\n */\n\n\nfunction boundMethod(target, key, descriptor) {\n  var fn = descriptor.value;\n\n  if (typeof fn !== 'function') {\n    throw new Error('@autobind decorator can only be applied to methods not: ' + typeof fn);\n  } // In IE11 calling Object.defineProperty has a side-effect of evaluating the\n  // getter for the property which is being replaced. This causes infinite\n  // recursion and an \"Out of stack space\" error.\n\n\n  var definingProperty = false;\n  return {\n    configurable: true,\n    get: function get() {\n      if (definingProperty || this === target.prototype || this.hasOwnProperty(key)) {\n        return fn;\n      }\n\n      var boundFn = fn.bind(this);\n      definingProperty = true;\n      Object.defineProperty(this, key, {\n        value: boundFn,\n        configurable: true,\n        writable: true\n      });\n      definingProperty = false;\n      return boundFn;\n    }\n  };\n}\n\nmodule.exports = exports['default'];","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Label;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @ignore\n * @param {Object} props\n * @param {InputRangeClassNames} props.classNames\n * @param {Function} props.formatLabel\n * @param {string} props.type\n */\n\n\nfunction Label(props) {\n  var labelValue = props.formatLabel ? props.formatLabel(props.children, props.type) : props.children;\n  return _react2.default.createElement('span', {\n    className: props.classNames[props.type + 'Label']\n  }, _react2.default.createElement('span', {\n    className: props.classNames.labelContainer\n  }, labelValue));\n}\n/**\n * @type {Object}\n * @property {Function} children\n * @property {Function} classNames\n * @property {Function} formatLabel\n * @property {Function} type\n */\n\n\nLabel.propTypes = {\n  children: _propTypes2.default.node.isRequired,\n  classNames: _propTypes2.default.objectOf(_propTypes2.default.string).isRequired,\n  formatLabel: _propTypes2.default.func,\n  type: _propTypes2.default.string.isRequired\n};\nmodule.exports = exports['default'];","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inputRange = require('./input-range/input-range');\n\nvar _inputRange2 = _interopRequireDefault(_inputRange);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @ignore\n * @typedef {Object} ClientRect\n * @property {number} height\n * @property {number} left\n * @property {number} top\n * @property {number} width\n */\n\n/**\n * @typedef {Object} InputRangeClassNames\n * @property {string} activeTrack\n * @property {string} disabledInputRange\n * @property {string} inputRange\n * @property {string} labelContainer\n * @property {string} maxLabel\n * @property {string} minLabel\n * @property {string} slider\n * @property {string} sliderContainer\n * @property {string} track\n * @property {string} valueLabel\n */\n\n/**\n * @typedef {Function} LabelFormatter\n * @param {number} value\n * @param {string} type\n * @return {string}\n */\n\n/**\n * @ignore\n * @typedef {Object} Point\n * @property {number} x\n * @property {number} y\n */\n\n/**\n * @typedef {Object} Range\n * @property {number} min - Min value\n * @property {number} max - Max value\n */\n\n\nexports.default = _inputRange2.default;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _desc, _value, _class;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nvar _valueTransformer = require('./value-transformer');\n\nvar valueTransformer = _interopRequireWildcard(_valueTransformer);\n\nvar _defaultClassNames = require('./default-class-names');\n\nvar _defaultClassNames2 = _interopRequireDefault(_defaultClassNames);\n\nvar _label = require('./label');\n\nvar _label2 = _interopRequireDefault(_label);\n\nvar _rangePropType = require('./range-prop-type');\n\nvar _rangePropType2 = _interopRequireDefault(_rangePropType);\n\nvar _valuePropType = require('./value-prop-type');\n\nvar _valuePropType2 = _interopRequireDefault(_valuePropType);\n\nvar _slider = require('./slider');\n\nvar _slider2 = _interopRequireDefault(_slider);\n\nvar _track = require('./track');\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _utils = require('../utils');\n\nvar _keyCodes = require('./key-codes');\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/**\n * A React component that allows users to input numeric values within a range\n * by dragging its sliders.\n */\n\n\nvar InputRange = (_class = function (_React$Component) {\n  _inherits(InputRange, _React$Component);\n\n  _createClass(InputRange, null, [{\n    key: 'propTypes',\n\n    /**\n     * @ignore\n     * @override\n     * @return {Object}\n     */\n    get: function get() {\n      return {\n        allowSameValues: _propTypes2.default.bool,\n        ariaLabelledby: _propTypes2.default.string,\n        ariaControls: _propTypes2.default.string,\n        classNames: _propTypes2.default.objectOf(_propTypes2.default.string),\n        disabled: _propTypes2.default.bool,\n        draggableTrack: _propTypes2.default.bool,\n        formatLabel: _propTypes2.default.func,\n        maxValue: _rangePropType2.default,\n        minValue: _rangePropType2.default,\n        name: _propTypes2.default.string,\n        onChangeStart: _propTypes2.default.func,\n        onChange: _propTypes2.default.func.isRequired,\n        onChangeComplete: _propTypes2.default.func,\n        step: _propTypes2.default.number,\n        value: _valuePropType2.default\n      };\n    }\n    /**\n     * @ignore\n     * @override\n     * @return {Object}\n     */\n\n  }, {\n    key: 'defaultProps',\n    get: function get() {\n      return {\n        allowSameValues: false,\n        classNames: _defaultClassNames2.default,\n        disabled: false,\n        maxValue: 10,\n        minValue: 0,\n        step: 1\n      };\n    }\n    /**\n     * @param {Object} props\n     * @param {boolean} [props.allowSameValues]\n     * @param {string} [props.ariaLabelledby]\n     * @param {string} [props.ariaControls]\n     * @param {InputRangeClassNames} [props.classNames]\n     * @param {boolean} [props.disabled = false]\n     * @param {Function} [props.formatLabel]\n     * @param {number|Range} [props.maxValue = 10]\n     * @param {number|Range} [props.minValue = 0]\n     * @param {string} [props.name]\n     * @param {string} props.onChange\n     * @param {Function} [props.onChangeComplete]\n     * @param {Function} [props.onChangeStart]\n     * @param {number} [props.step = 1]\n     * @param {number|Range} props.value\n     */\n\n  }]);\n\n  function InputRange(props) {\n    _classCallCheck(this, InputRange);\n    /**\n     * @private\n     * @type {?number}\n     */\n\n\n    var _this = _possibleConstructorReturn(this, (InputRange.__proto__ || Object.getPrototypeOf(InputRange)).call(this, props));\n\n    _this.startValue = null;\n    /**\n     * @private\n     * @type {?Component}\n     */\n\n    _this.node = null;\n    /**\n     * @private\n     * @type {?Component}\n     */\n\n    _this.trackNode = null;\n    /**\n     * @private\n     * @type {bool}\n     */\n\n    _this.isSliderDragging = false;\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    _this.lastKeyMoved = null;\n    return _this;\n  }\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n\n\n  _createClass(InputRange, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.removeDocumentMouseUpListener();\n      this.removeDocumentTouchEndListener();\n    }\n    /**\n     * Return the CSS class name of the component\n     * @private\n     * @return {string}\n     */\n\n  }, {\n    key: 'getComponentClassName',\n    value: function getComponentClassName() {\n      if (!this.props.disabled) {\n        return this.props.classNames.inputRange;\n      }\n\n      return this.props.classNames.disabledInputRange;\n    }\n    /**\n     * Return the bounding rect of the track\n     * @private\n     * @return {ClientRect}\n     */\n\n  }, {\n    key: 'getTrackClientRect',\n    value: function getTrackClientRect() {\n      return this.trackNode.getClientRect();\n    }\n    /**\n     * Return the slider key closest to a point\n     * @private\n     * @param {Point} position\n     * @return {string}\n     */\n\n  }, {\n    key: 'getKeyByPosition',\n    value: function getKeyByPosition(position) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());\n\n      if (this.isMultiValue()) {\n        var distanceToMin = (0, _utils.distanceTo)(position, positions.min);\n        var distanceToMax = (0, _utils.distanceTo)(position, positions.max);\n\n        if (distanceToMin < distanceToMax) {\n          return 'min';\n        }\n      }\n\n      return 'max';\n    }\n    /**\n     * Return all the slider keys\n     * @private\n     * @return {string[]}\n     */\n\n  }, {\n    key: 'getKeys',\n    value: function getKeys() {\n      if (this.isMultiValue()) {\n        return ['min', 'max'];\n      }\n\n      return ['max'];\n    }\n    /**\n     * Return true if the difference between the new and the current value is\n     * greater or equal to the step amount of the component\n     * @private\n     * @param {Range} values\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'hasStepDifference',\n    value: function hasStepDifference(values) {\n      var currentValues = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      return (0, _utils.length)(values.min, currentValues.min) >= this.props.step || (0, _utils.length)(values.max, currentValues.max) >= this.props.step;\n    }\n    /**\n     * Return true if the component accepts a min and max value\n     * @private\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'isMultiValue',\n    value: function isMultiValue() {\n      return (0, _utils.isObject)(this.props.value);\n    }\n    /**\n     * Return true if the range is within the max and min value of the component\n     * @private\n     * @param {Range} values\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'isWithinRange',\n    value: function isWithinRange(values) {\n      if (this.isMultiValue()) {\n        return values.min >= this.props.minValue && values.max <= this.props.maxValue && this.props.allowSameValues ? values.min <= values.max : values.min < values.max;\n      }\n\n      return values.max >= this.props.minValue && values.max <= this.props.maxValue;\n    }\n    /**\n     * Return true if the new value should trigger a render\n     * @private\n     * @param {Range} values\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'shouldUpdate',\n    value: function shouldUpdate(values) {\n      return this.isWithinRange(values) && this.hasStepDifference(values);\n    }\n    /**\n     * Update the position of a slider\n     * @private\n     * @param {string} key\n     * @param {Point} position\n     * @return {void}\n     */\n\n  }, {\n    key: 'updatePosition',\n    value: function updatePosition(key, position) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());\n      positions[key] = position;\n      this.lastKeyMoved = key;\n      this.updatePositions(positions);\n    }\n    /**\n     * Update the positions of multiple sliders\n     * @private\n     * @param {Object} positions\n     * @param {Point} positions.min\n     * @param {Point} positions.max\n     * @return {void}\n     */\n\n  }, {\n    key: 'updatePositions',\n    value: function updatePositions(positions) {\n      var values = {\n        min: valueTransformer.getValueFromPosition(positions.min, this.props.minValue, this.props.maxValue, this.getTrackClientRect()),\n        max: valueTransformer.getValueFromPosition(positions.max, this.props.minValue, this.props.maxValue, this.getTrackClientRect())\n      };\n      var transformedValues = {\n        min: valueTransformer.getStepValueFromValue(values.min, this.props.step),\n        max: valueTransformer.getStepValueFromValue(values.max, this.props.step)\n      };\n      this.updateValues(transformedValues);\n    }\n    /**\n     * Update the value of a slider\n     * @private\n     * @param {string} key\n     * @param {number} value\n     * @return {void}\n     */\n\n  }, {\n    key: 'updateValue',\n    value: function updateValue(key, value) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      values[key] = value;\n      this.updateValues(values);\n    }\n    /**\n     * Update the values of multiple sliders\n     * @private\n     * @param {Range|number} values\n     * @return {void}\n     */\n\n  }, {\n    key: 'updateValues',\n    value: function updateValues(values) {\n      if (!this.shouldUpdate(values)) {\n        return;\n      }\n\n      this.props.onChange(this.isMultiValue() ? values : values.max);\n    }\n    /**\n     * Increment the value of a slider by key name\n     * @private\n     * @param {string} key\n     * @return {void}\n     */\n\n  }, {\n    key: 'incrementValue',\n    value: function incrementValue(key) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var value = values[key] + this.props.step;\n      this.updateValue(key, value);\n    }\n    /**\n     * Decrement the value of a slider by key name\n     * @private\n     * @param {string} key\n     * @return {void}\n     */\n\n  }, {\n    key: 'decrementValue',\n    value: function decrementValue(key) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var value = values[key] - this.props.step;\n      this.updateValue(key, value);\n    }\n    /**\n     * Listen to mouseup event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseUpListener',\n    value: function addDocumentMouseUpListener() {\n      this.removeDocumentMouseUpListener();\n      this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * Listen to touchend event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentTouchEndListener',\n    value: function addDocumentTouchEndListener() {\n      this.removeDocumentTouchEndListener();\n      this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n    }\n    /**\n     * Stop listening to mouseup event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseUpListener',\n    value: function removeDocumentMouseUpListener() {\n      this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * Stop listening to touchend event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentTouchEndListener',\n    value: function removeDocumentTouchEndListener() {\n      this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);\n    }\n    /**\n     * Handle any \"mousemove\" event received by the slider\n     * @private\n     * @param {SyntheticEvent} event\n     * @param {string} key\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleSliderDrag',\n    value: function handleSliderDrag(event, key) {\n      var _this2 = this;\n\n      if (this.props.disabled) {\n        return;\n      }\n\n      var position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());\n      this.isSliderDragging = true;\n      requestAnimationFrame(function () {\n        return _this2.updatePosition(key, position);\n      });\n    }\n    /**\n     * Handle any \"mousemove\" event received by the track\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTrackDrag',\n    value: function handleTrackDrag(event, prevEvent) {\n      if (this.props.disabled || !this.props.draggableTrack || this.isSliderDragging) {\n        return;\n      }\n\n      var _props = this.props,\n          maxValue = _props.maxValue,\n          minValue = _props.minValue,\n          _props$value = _props.value,\n          max = _props$value.max,\n          min = _props$value.min;\n      var position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());\n      var value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());\n      var stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);\n      var prevPosition = valueTransformer.getPositionFromEvent(prevEvent, this.getTrackClientRect());\n      var prevValue = valueTransformer.getValueFromPosition(prevPosition, minValue, maxValue, this.getTrackClientRect());\n      var prevStepValue = valueTransformer.getStepValueFromValue(prevValue, this.props.step);\n      var offset = prevStepValue - stepValue;\n      var transformedValues = {\n        min: min - offset,\n        max: max - offset\n      };\n      this.updateValues(transformedValues);\n    }\n    /**\n     * Handle any \"keydown\" event received by the slider\n     * @private\n     * @param {SyntheticEvent} event\n     * @param {string} key\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleSliderKeyDown',\n    value: function handleSliderKeyDown(event, key) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      switch (event.keyCode) {\n        case _keyCodes.LEFT_ARROW:\n        case _keyCodes.DOWN_ARROW:\n          event.preventDefault();\n          this.decrementValue(key);\n          break;\n\n        case _keyCodes.RIGHT_ARROW:\n        case _keyCodes.UP_ARROW:\n          event.preventDefault();\n          this.incrementValue(key);\n          break;\n\n        default:\n          break;\n      }\n    }\n    /**\n     * Handle any \"mousedown\" event received by the track\n     * @private\n     * @param {SyntheticEvent} event\n     * @param {Point} position\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTrackMouseDown',\n    value: function handleTrackMouseDown(event, position) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      var _props2 = this.props,\n          maxValue = _props2.maxValue,\n          minValue = _props2.minValue,\n          _props2$value = _props2.value,\n          max = _props2$value.max,\n          min = _props2$value.min;\n      event.preventDefault();\n      var value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());\n      var stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);\n\n      if (!this.props.draggableTrack || stepValue > max || stepValue < min) {\n        this.updatePosition(this.getKeyByPosition(position), position);\n      }\n    }\n    /**\n     * Handle the start of any mouse/touch event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleInteractionStart',\n    value: function handleInteractionStart() {\n      if (this.props.onChangeStart) {\n        this.props.onChangeStart(this.props.value);\n      }\n\n      if (this.props.onChangeComplete && !(0, _utils.isDefined)(this.startValue)) {\n        this.startValue = this.props.value;\n      }\n    }\n    /**\n     * Handle the end of any mouse/touch event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleInteractionEnd',\n    value: function handleInteractionEnd() {\n      if (this.isSliderDragging) {\n        this.isSliderDragging = false;\n      }\n\n      if (!this.props.onChangeComplete || !(0, _utils.isDefined)(this.startValue)) {\n        return;\n      }\n\n      if (this.startValue !== this.props.value) {\n        this.props.onChangeComplete(this.props.value);\n      }\n\n      this.startValue = null;\n    }\n    /**\n     * Handle any \"keydown\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleKeyDown',\n    value: function handleKeyDown(event) {\n      this.handleInteractionStart(event);\n    }\n    /**\n     * Handle any \"keyup\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleKeyUp',\n    value: function handleKeyUp(event) {\n      this.handleInteractionEnd(event);\n    }\n    /**\n     * Handle any \"mousedown\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseDown',\n    value: function handleMouseDown(event) {\n      this.handleInteractionStart(event);\n      this.addDocumentMouseUpListener();\n    }\n    /**\n     * Handle any \"mouseup\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     */\n\n  }, {\n    key: 'handleMouseUp',\n    value: function handleMouseUp(event) {\n      this.handleInteractionEnd(event);\n      this.removeDocumentMouseUpListener();\n    }\n    /**\n     * Handle any \"touchstart\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTouchStart',\n    value: function handleTouchStart(event) {\n      this.handleInteractionStart(event);\n      this.addDocumentTouchEndListener();\n    }\n    /**\n     * Handle any \"touchend\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     */\n\n  }, {\n    key: 'handleTouchEnd',\n    value: function handleTouchEnd(event) {\n      this.handleInteractionEnd(event);\n      this.removeDocumentTouchEndListener();\n    }\n    /**\n     * Return JSX of sliders\n     * @private\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'renderSliders',\n    value: function renderSliders() {\n      var _this3 = this;\n\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);\n      var keys = this.props.allowSameValues && this.lastKeyMoved === 'min' ? this.getKeys().reverse() : this.getKeys();\n      return keys.map(function (key) {\n        var value = values[key];\n        var percentage = percentages[key];\n        var _props3 = _this3.props,\n            maxValue = _props3.maxValue,\n            minValue = _props3.minValue;\n\n        if (key === 'min') {\n          maxValue = values.max;\n        } else {\n          minValue = values.min;\n        }\n\n        var slider = _react2.default.createElement(_slider2.default, {\n          ariaLabelledby: _this3.props.ariaLabelledby,\n          ariaControls: _this3.props.ariaControls,\n          classNames: _this3.props.classNames,\n          formatLabel: _this3.props.formatLabel,\n          key: key,\n          maxValue: maxValue,\n          minValue: minValue,\n          onSliderDrag: _this3.handleSliderDrag,\n          onSliderKeyDown: _this3.handleSliderKeyDown,\n          percentage: percentage,\n          type: key,\n          value: value\n        });\n\n        return slider;\n      });\n    }\n    /**\n     * Return JSX of hidden inputs\n     * @private\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'renderHiddenInputs',\n    value: function renderHiddenInputs() {\n      var _this4 = this;\n\n      if (!this.props.name) {\n        return [];\n      }\n\n      var isMultiValue = this.isMultiValue();\n      var values = valueTransformer.getValueFromProps(this.props, isMultiValue);\n      return this.getKeys().map(function (key) {\n        var value = values[key];\n        var name = isMultiValue ? '' + _this4.props.name + (0, _utils.captialize)(key) : _this4.props.name;\n        return _react2.default.createElement('input', {\n          key: key,\n          type: 'hidden',\n          name: name,\n          value: value\n        });\n      });\n    }\n    /**\n     * @ignore\n     * @override\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      var componentClassName = this.getComponentClassName();\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);\n      return _react2.default.createElement('div', {\n        'aria-disabled': this.props.disabled,\n        ref: function ref(node) {\n          _this5.node = node;\n        },\n        className: componentClassName,\n        onKeyDown: this.handleKeyDown,\n        onKeyUp: this.handleKeyUp,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart\n      }, _react2.default.createElement(_label2.default, {\n        classNames: this.props.classNames,\n        formatLabel: this.props.formatLabel,\n        type: 'min'\n      }, this.props.minValue), _react2.default.createElement(_track2.default, {\n        classNames: this.props.classNames,\n        draggableTrack: this.props.draggableTrack,\n        ref: function ref(trackNode) {\n          _this5.trackNode = trackNode;\n        },\n        percentages: percentages,\n        onTrackDrag: this.handleTrackDrag,\n        onTrackMouseDown: this.handleTrackMouseDown\n      }, this.renderSliders()), _react2.default.createElement(_label2.default, {\n        classNames: this.props.classNames,\n        formatLabel: this.props.formatLabel,\n        type: 'max'\n      }, this.props.maxValue), this.renderHiddenInputs());\n    }\n  }]);\n\n  return InputRange;\n}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleSliderDrag', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleSliderDrag'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTrackDrag', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTrackDrag'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleSliderKeyDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleSliderKeyDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTrackMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTrackMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleInteractionStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleInteractionStart'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleInteractionEnd', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleInteractionEnd'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleKeyDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleKeyDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleKeyUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleKeyUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchStart'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchEnd', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchEnd'), _class.prototype)), _class);\nexports.default = InputRange;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.getPercentageFromPosition = getPercentageFromPosition;\nexports.getValueFromPosition = getValueFromPosition;\nexports.getValueFromProps = getValueFromProps;\nexports.getPercentageFromValue = getPercentageFromValue;\nexports.getPercentagesFromValues = getPercentagesFromValues;\nexports.getPositionFromValue = getPositionFromValue;\nexports.getPositionsFromValues = getPositionsFromValues;\nexports.getPositionFromEvent = getPositionFromEvent;\nexports.getStepValueFromValue = getStepValueFromValue;\n\nvar _utils = require('../utils');\n/**\n * Convert a point into a percentage value\n * @ignore\n * @param {Point} position\n * @param {ClientRect} clientRect\n * @return {number} Percentage value\n */\n\n\nfunction getPercentageFromPosition(position, clientRect) {\n  var length = clientRect.width;\n  var sizePerc = position.x / length;\n  return sizePerc || 0;\n}\n/**\n * Convert a point into a model value\n * @ignore\n * @param {Point} position\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {number}\n */\n\n\nfunction getValueFromPosition(position, minValue, maxValue, clientRect) {\n  var sizePerc = getPercentageFromPosition(position, clientRect);\n  var valueDiff = maxValue - minValue;\n  return minValue + valueDiff * sizePerc;\n}\n/**\n * Convert props into a range value\n * @ignore\n * @param {Object} props\n * @param {boolean} isMultiValue\n * @return {Range}\n */\n\n\nfunction getValueFromProps(props, isMultiValue) {\n  if (isMultiValue) {\n    return _extends({}, props.value);\n  }\n\n  return {\n    min: props.minValue,\n    max: props.value\n  };\n}\n/**\n * Convert a model value into a percentage value\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @return {number}\n */\n\n\nfunction getPercentageFromValue(value, minValue, maxValue) {\n  var validValue = (0, _utils.clamp)(value, minValue, maxValue);\n  var valueDiff = maxValue - minValue;\n  var valuePerc = (validValue - minValue) / valueDiff;\n  return valuePerc || 0;\n}\n/**\n * Convert model values into percentage values\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @return {Range}\n */\n\n\nfunction getPercentagesFromValues(values, minValue, maxValue) {\n  return {\n    min: getPercentageFromValue(values.min, minValue, maxValue),\n    max: getPercentageFromValue(values.max, minValue, maxValue)\n  };\n}\n/**\n * Convert a value into a point\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Point} Position\n */\n\n\nfunction getPositionFromValue(value, minValue, maxValue, clientRect) {\n  var length = clientRect.width;\n  var valuePerc = getPercentageFromValue(value, minValue, maxValue);\n  var positionValue = valuePerc * length;\n  return {\n    x: positionValue,\n    y: 0\n  };\n}\n/**\n * Convert a range of values into points\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Range}\n */\n\n\nfunction getPositionsFromValues(values, minValue, maxValue, clientRect) {\n  return {\n    min: getPositionFromValue(values.min, minValue, maxValue, clientRect),\n    max: getPositionFromValue(values.max, minValue, maxValue, clientRect)\n  };\n}\n/**\n * Convert an event into a point\n * @ignore\n * @param {Event} event\n * @param {ClientRect} clientRect\n * @return {Point}\n */\n\n\nfunction getPositionFromEvent(event, clientRect) {\n  var length = clientRect.width;\n\n  var _ref = event.touches ? event.touches[0] : event,\n      clientX = _ref.clientX;\n\n  return {\n    x: (0, _utils.clamp)(clientX - clientRect.left, 0, length),\n    y: 0\n  };\n}\n/**\n * Convert a value into a step value\n * @ignore\n * @param {number} value\n * @param {number} valuePerStep\n * @return {number}\n */\n\n\nfunction getStepValueFromValue(value, valuePerStep) {\n  return Math.round(value / valuePerStep) * valuePerStep;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = captialize;\n/**\n * Captialize a string\n * @ignore\n * @param {string} string\n * @return {string}\n */\n\nfunction captialize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = clamp;\n/**\n * Clamp a value between a min and max value\n * @ignore\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\n\nfunction clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = distanceTo;\n/**\n * Calculate the distance between pointA and pointB\n * @ignore\n * @param {Point} pointA\n * @param {Point} pointB\n * @return {number} Distance\n */\n\nfunction distanceTo(pointA, pointB) {\n  var xDiff = Math.pow(pointB.x - pointA.x, 2);\n  var yDiff = Math.pow(pointB.y - pointA.y, 2);\n  return Math.sqrt(xDiff + yDiff);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDefined;\n/**\n * Check if a value is defined\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNumber;\n/**\n * Check if a value is a number\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = isObject;\n/**\n * Check if a value is an object\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = length;\n/**\n * Calculate the absolute difference between two numbers\n * @ignore\n * @param {number} numA\n * @param {number} numB\n * @return {number}\n */\n\nfunction length(numA, numB) {\n  return Math.abs(numA - numB);\n}\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Default CSS class names\n * @ignore\n * @type {InputRangeClassNames}\n */\n\nvar DEFAULT_CLASS_NAMES = {\n  activeTrack: 'input-range__track input-range__track--active',\n  disabledInputRange: 'input-range input-range--disabled',\n  inputRange: 'input-range',\n  labelContainer: 'input-range__label-container',\n  maxLabel: 'input-range__label input-range__label--max',\n  minLabel: 'input-range__label input-range__label--min',\n  slider: 'input-range__slider',\n  sliderContainer: 'input-range__slider-container',\n  track: 'input-range__track input-range__track--background',\n  valueLabel: 'input-range__label input-range__label--value'\n};\nexports.default = DEFAULT_CLASS_NAMES;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rangePropType;\n\nvar _utils = require('../utils');\n/**\n * @ignore\n * @param {Object} props - React component props\n * @return {?Error} Return Error if validation fails\n */\n\n\nfunction rangePropType(props) {\n  var maxValue = props.maxValue,\n      minValue = props.minValue;\n\n  if (!(0, _utils.isNumber)(minValue) || !(0, _utils.isNumber)(maxValue)) {\n    return new Error('\"minValue\" and \"maxValue\" must be a number');\n  }\n\n  if (minValue >= maxValue) {\n    return new Error('\"minValue\" must be smaller than \"maxValue\"');\n  }\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = valuePropType;\n\nvar _utils = require('../utils');\n/**\n * @ignore\n * @param {Object} props\n * @return {?Error} Return Error if validation fails\n */\n\n\nfunction valuePropType(props, propName) {\n  var maxValue = props.maxValue,\n      minValue = props.minValue;\n  var value = props[propName];\n\n  if (!(0, _utils.isNumber)(value) && (!(0, _utils.isObject)(value) || !(0, _utils.isNumber)(value.min) || !(0, _utils.isNumber)(value.max))) {\n    return new Error('\"' + propName + '\" must be a number or a range object');\n  }\n\n  if ((0, _utils.isNumber)(value) && (value < minValue || value > maxValue)) {\n    return new Error('\"' + propName + '\" must be in between \"minValue\" and \"maxValue\"');\n  }\n\n  if ((0, _utils.isObject)(value) && (value.min < minValue || value.min > maxValue || value.max < minValue || value.max > maxValue)) {\n    return new Error('\"' + propName + '\" must be in between \"minValue\" and \"maxValue\"');\n  }\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _desc, _value, _class;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nvar _label = require('./label');\n\nvar _label2 = _interopRequireDefault(_label);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/**\n * @ignore\n */\n\n\nvar Slider = (_class = function (_React$Component) {\n  _inherits(Slider, _React$Component);\n\n  _createClass(Slider, null, [{\n    key: 'propTypes',\n\n    /**\n     * Accepted propTypes of Slider\n     * @override\n     * @return {Object}\n     * @property {Function} ariaLabelledby\n     * @property {Function} ariaControls\n     * @property {Function} className\n     * @property {Function} formatLabel\n     * @property {Function} maxValue\n     * @property {Function} minValue\n     * @property {Function} onSliderDrag\n     * @property {Function} onSliderKeyDown\n     * @property {Function} percentage\n     * @property {Function} type\n     * @property {Function} value\n     */\n    get: function get() {\n      return {\n        ariaLabelledby: _propTypes2.default.string,\n        ariaControls: _propTypes2.default.string,\n        classNames: _propTypes2.default.objectOf(_propTypes2.default.string).isRequired,\n        formatLabel: _propTypes2.default.func,\n        maxValue: _propTypes2.default.number,\n        minValue: _propTypes2.default.number,\n        onSliderDrag: _propTypes2.default.func.isRequired,\n        onSliderKeyDown: _propTypes2.default.func.isRequired,\n        percentage: _propTypes2.default.number.isRequired,\n        type: _propTypes2.default.string.isRequired,\n        value: _propTypes2.default.number.isRequired\n      };\n    }\n    /**\n     * @param {Object} props\n     * @param {string} [props.ariaLabelledby]\n     * @param {string} [props.ariaControls]\n     * @param {InputRangeClassNames} props.classNames\n     * @param {Function} [props.formatLabel]\n     * @param {number} [props.maxValue]\n     * @param {number} [props.minValue]\n     * @param {Function} props.onSliderKeyDown\n     * @param {Function} props.onSliderDrag\n     * @param {number} props.percentage\n     * @param {number} props.type\n     * @param {number} props.value\n     */\n\n  }]);\n\n  function Slider(props) {\n    _classCallCheck(this, Slider);\n    /**\n     * @private\n     * @type {?Component}\n     */\n\n\n    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props));\n\n    _this.node = null;\n    return _this;\n  }\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n\n\n  _createClass(Slider, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.removeDocumentMouseMoveListener();\n      this.removeDocumentMouseUpListener();\n      this.removeDocumentTouchEndListener();\n      this.removeDocumentTouchMoveListener();\n    }\n    /**\n     * @private\n     * @return {Object}\n     */\n\n  }, {\n    key: 'getStyle',\n    value: function getStyle() {\n      var perc = (this.props.percentage || 0) * 100;\n      var style = {\n        position: 'absolute',\n        left: perc + '%'\n      };\n      return style;\n    }\n    /**\n     * Listen to mousemove event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseMoveListener',\n    value: function addDocumentMouseMoveListener() {\n      this.removeDocumentMouseMoveListener();\n      this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n    }\n    /**\n     * Listen to mouseup event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseUpListener',\n    value: function addDocumentMouseUpListener() {\n      this.removeDocumentMouseUpListener();\n      this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * Listen to touchmove event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentTouchMoveListener',\n    value: function addDocumentTouchMoveListener() {\n      this.removeDocumentTouchMoveListener();\n      this.node.ownerDocument.addEventListener('touchmove', this.handleTouchMove);\n    }\n    /**\n     * Listen to touchend event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentTouchEndListener',\n    value: function addDocumentTouchEndListener() {\n      this.removeDocumentTouchEndListener();\n      this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseMoveListener',\n    value: function removeDocumentMouseMoveListener() {\n      this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseUpListener',\n    value: function removeDocumentMouseUpListener() {\n      this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentTouchMoveListener',\n    value: function removeDocumentTouchMoveListener() {\n      this.node.ownerDocument.removeEventListener('touchmove', this.handleTouchMove);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentTouchEndListener',\n    value: function removeDocumentTouchEndListener() {\n      this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseDown',\n    value: function handleMouseDown() {\n      this.addDocumentMouseMoveListener();\n      this.addDocumentMouseUpListener();\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseUp',\n    value: function handleMouseUp() {\n      this.removeDocumentMouseMoveListener();\n      this.removeDocumentMouseUpListener();\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseMove',\n    value: function handleMouseMove(event) {\n      this.props.onSliderDrag(event, this.props.type);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTouchStart',\n    value: function handleTouchStart() {\n      this.addDocumentTouchEndListener();\n      this.addDocumentTouchMoveListener();\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTouchMove',\n    value: function handleTouchMove(event) {\n      this.props.onSliderDrag(event, this.props.type);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTouchEnd',\n    value: function handleTouchEnd() {\n      this.removeDocumentTouchMoveListener();\n      this.removeDocumentTouchEndListener();\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleKeyDown',\n    value: function handleKeyDown(event) {\n      this.props.onSliderKeyDown(event, this.props.type);\n    }\n    /**\n     * @override\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var style = this.getStyle();\n      return _react2.default.createElement('span', {\n        className: this.props.classNames.sliderContainer,\n        ref: function ref(node) {\n          _this2.node = node;\n        },\n        style: style\n      }, _react2.default.createElement(_label2.default, {\n        classNames: this.props.classNames,\n        formatLabel: this.props.formatLabel,\n        type: 'value'\n      }, this.props.value), _react2.default.createElement('div', {\n        'aria-labelledby': this.props.ariaLabelledby,\n        'aria-controls': this.props.ariaControls,\n        'aria-valuemax': this.props.maxValue,\n        'aria-valuemin': this.props.minValue,\n        'aria-valuenow': this.props.value,\n        className: this.props.classNames.slider,\n        draggable: 'false',\n        onKeyDown: this.handleKeyDown,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        role: 'slider',\n        tabIndex: '0'\n      }));\n    }\n  }]);\n\n  return Slider;\n}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseMove', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseMove'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchStart'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchMove', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchMove'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchEnd', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchEnd'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleKeyDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleKeyDown'), _class.prototype)), _class);\nexports.default = Slider;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _desc, _value, _class;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/**\n * @ignore\n */\n\n\nvar Track = (_class = function (_React$Component) {\n  _inherits(Track, _React$Component);\n\n  _createClass(Track, null, [{\n    key: 'propTypes',\n\n    /**\n     * @override\n     * @return {Object}\n     * @property {Function} children\n     * @property {Function} classNames\n     * @property {Boolean} draggableTrack\n     * @property {Function} onTrackDrag\n     * @property {Function} onTrackMouseDown\n     * @property {Function} percentages\n     */\n    get: function get() {\n      return {\n        children: _propTypes2.default.node.isRequired,\n        classNames: _propTypes2.default.objectOf(_propTypes2.default.string).isRequired,\n        draggableTrack: _propTypes2.default.bool,\n        onTrackDrag: _propTypes2.default.func,\n        onTrackMouseDown: _propTypes2.default.func.isRequired,\n        percentages: _propTypes2.default.objectOf(_propTypes2.default.number).isRequired\n      };\n    }\n    /**\n     * @param {Object} props\n     * @param {InputRangeClassNames} props.classNames\n     * @param {Boolean} props.draggableTrack\n     * @param {Function} props.onTrackDrag\n     * @param {Function} props.onTrackMouseDown\n     * @param {number} props.percentages\n     */\n\n  }]);\n\n  function Track(props) {\n    _classCallCheck(this, Track);\n    /**\n     * @private\n     * @type {?Component}\n     */\n\n\n    var _this = _possibleConstructorReturn(this, (Track.__proto__ || Object.getPrototypeOf(Track)).call(this, props));\n\n    _this.node = null;\n    _this.trackDragEvent = null;\n    return _this;\n  }\n  /**\n   * @private\n   * @return {ClientRect}\n   */\n\n\n  _createClass(Track, [{\n    key: 'getClientRect',\n    value: function getClientRect() {\n      return this.node.getBoundingClientRect();\n    }\n    /**\n     * @private\n     * @return {Object} CSS styles\n     */\n\n  }, {\n    key: 'getActiveTrackStyle',\n    value: function getActiveTrackStyle() {\n      var width = (this.props.percentages.max - this.props.percentages.min) * 100 + '%';\n      var left = this.props.percentages.min * 100 + '%';\n      return {\n        left: left,\n        width: width\n      };\n    }\n    /**\n     * Listen to mousemove event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseMoveListener',\n    value: function addDocumentMouseMoveListener() {\n      this.removeDocumentMouseMoveListener();\n      this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n    }\n    /**\n     * Listen to mouseup event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseUpListener',\n    value: function addDocumentMouseUpListener() {\n      this.removeDocumentMouseUpListener();\n      this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseMoveListener',\n    value: function removeDocumentMouseMoveListener() {\n      this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseUpListener',\n    value: function removeDocumentMouseUpListener() {\n      this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseMove',\n    value: function handleMouseMove(event) {\n      if (!this.props.draggableTrack) {\n        return;\n      }\n\n      if (this.trackDragEvent !== null) {\n        this.props.onTrackDrag(event, this.trackDragEvent);\n      }\n\n      this.trackDragEvent = event;\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseUp',\n    value: function handleMouseUp() {\n      if (!this.props.draggableTrack) {\n        return;\n      }\n\n      this.removeDocumentMouseMoveListener();\n      this.removeDocumentMouseUpListener();\n      this.trackDragEvent = null;\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event - User event\n     */\n\n  }, {\n    key: 'handleMouseDown',\n    value: function handleMouseDown(event) {\n      var clientX = event.touches ? event.touches[0].clientX : event.clientX;\n      var trackClientRect = this.getClientRect();\n      var position = {\n        x: clientX - trackClientRect.left,\n        y: 0\n      };\n      this.props.onTrackMouseDown(event, position);\n\n      if (this.props.draggableTrack) {\n        this.addDocumentMouseMoveListener();\n        this.addDocumentMouseUpListener();\n      }\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event - User event\n     */\n\n  }, {\n    key: 'handleTouchStart',\n    value: function handleTouchStart(event) {\n      event.preventDefault();\n      this.handleMouseDown(event);\n    }\n    /**\n     * @override\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var activeTrackStyle = this.getActiveTrackStyle();\n      return _react2.default.createElement('div', {\n        className: this.props.classNames.track,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        ref: function ref(node) {\n          _this2.node = node;\n        }\n      }, _react2.default.createElement('div', {\n        style: activeTrackStyle,\n        className: this.props.classNames.activeTrack\n      }), this.props.children);\n    }\n  }]);\n\n  return Track;\n}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleMouseMove', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseMove'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchStart'), _class.prototype)), _class);\nexports.default = Track;\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** @ignore */\n\nvar DOWN_ARROW = exports.DOWN_ARROW = 40;\n/** @ignore */\n\nvar LEFT_ARROW = exports.LEFT_ARROW = 37;\n/** @ignore */\n\nvar RIGHT_ARROW = exports.RIGHT_ARROW = 39;\n/** @ignore */\n\nvar UP_ARROW = exports.UP_ARROW = 38;"],"sourceRoot":""}