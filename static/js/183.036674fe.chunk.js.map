{"version":3,"sources":["components/MouseClickPixi/index.js"],"names":["colors","MouseClickPixi","stageRef","React","createRef","pop","event","mouse_x","clientX","mouse_y","clientY","particles","i","particle","PIXI","rand","anime","random","length","beginFill","drawCircle","endFill","x","y","push","_this","app","stage","addChild","targets","alpha","delay","duration","value","easing","complete","_i","_particles","removeChild","this","transparent","antialias","current","appendChild","view","renderer","style","display","autoResize","resize","window","innerWidth","innerHeight","start","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","ref","onClick","Component"],"mappings":"sMAKMA,UAAS,CAAC,SAAU,SAAU,SAAU,WAExCC,6MACJC,SAAWC,IAAMC,cAYjBC,IAAM,SAAAC,GAMJ,IALA,IAAIC,EAAUD,EAAME,QAClBC,EAAUH,EAAMI,QAChBC,EAAY,GAGLC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIC,EAAW,IAAIC,IACfC,EAAOC,IAAMC,OAAO,EAAGjB,EAAOkB,QAClCL,EAASM,UAAU,KAAOnB,EAAOe,EAAO,IACxCF,EAASO,WAAW,EAAG,EAAG,GAC1BP,EAASQ,UACTR,EAASS,EAAIf,EACbM,EAASU,EAAId,EACbE,EAAUa,KAAKX,GACfY,EAAKC,IAAIC,MAAMC,SAASf,GAE1BG,YAAM,CACJa,QAASlB,EACTW,EAFI,WAGF,OAAON,IAAMC,OAAOV,EAhBb,IAgB+BA,EAhB/B,MAkBTgB,EALI,WAMF,OAAOP,IAAMC,OAAOR,EAnBb,IAmB+BA,EAnB/B,MAqBTqB,MAAO,CAAEC,MAAO,IAAKC,SAAU,IAAKC,MAAO,GAC3CC,OAAQ,eACRC,SAAU,WACR,QAAAC,EAAA,EAAAC,EAAqB1B,EAArByB,EAAAC,EAAAnB,OAAAkB,IAAgC,CAA3B,IAAIvB,EAAQwB,EAAAD,GACfX,EAAKC,IAAIC,MAAMW,YAAYzB,2FAvCjC0B,KAAKb,IAAM,IAAIZ,IAAiB,CAC9B0B,aAAa,EACbC,WAAW,IAEbF,KAAKrC,SAASwC,QAAQC,YAAYJ,KAAKb,IAAIkB,MAC3CL,KAAKb,IAAImB,SAASD,KAAKE,MAAMC,QAAU,QACvCR,KAAKb,IAAImB,SAASG,YAAa,EAC/BT,KAAKb,IAAImB,SAASI,OAAOC,OAAOC,WAAYD,OAAOE,aACnDb,KAAKb,IAAI2B,yCAqCT,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKnB,KAAKrC,SAAUyD,QAASpB,KAAKlC,cAlDlBF,IAAMyD,WAwDpB3D","file":"static/js/183.036674fe.chunk.js","sourcesContent":["import React from 'react';\nimport * as PIXI from 'pixi.js';\nimport anime from 'animejs';\n\nimport './index.scss';\nconst colors = ['75F4F4', '90E0F3', 'B8B3E9', 'D999B9'];\n\nclass MouseClickPixi extends React.Component {\n  stageRef = React.createRef();\n  componentDidMount() {\n    this.app = new PIXI.Application({\n      transparent: true,\n      antialias: true\n    });\n    this.stageRef.current.appendChild(this.app.view);\n    this.app.renderer.view.style.display = 'block';\n    this.app.renderer.autoResize = true;\n    this.app.renderer.resize(window.innerWidth, window.innerHeight);\n    this.app.start();\n  }\n  pop = event => {\n    let mouse_x = event.clientX,\n      mouse_y = event.clientY,\n      particles = [],\n      spread = 100;\n\n    for (let i = 0; i < 50; i++) {\n      let particle = new PIXI.Graphics();\n      let rand = anime.random(1, colors.length);\n      particle.beginFill('0x' + colors[rand - 1]);\n      particle.drawCircle(0, 0, 4);\n      particle.endFill();\n      particle.x = mouse_x;\n      particle.y = mouse_y;\n      particles.push(particle);\n      this.app.stage.addChild(particle);\n    }\n    anime({\n      targets: particles,\n      x() {\n        return anime.random(mouse_x - spread, mouse_x + spread);\n      },\n      y() {\n        return anime.random(mouse_y - spread, mouse_y + spread);\n      },\n      alpha: { delay: 300, duration: 500, value: 0 },\n      easing: 'easeOutQuint',\n      complete: () => {\n        for (let particle of particles) {\n          this.app.stage.removeChild(particle);\n        }\n      }\n    });\n  };\n  render() {\n    return (\n      <div className=\"MouseClickPixi\">\n        <div ref={this.stageRef} onClick={this.pop} />\n      </div>\n    );\n  }\n}\n\nexport default MouseClickPixi;\n"],"sourceRoot":""}