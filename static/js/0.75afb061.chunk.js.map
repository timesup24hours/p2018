{"version":3,"sources":["../node_modules/lodash/isArray.js","../node_modules/lodash/_root.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/isObject.js","../node_modules/lodash/keys.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/eq.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/process/browser.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_createBaseEach.js"],"names":["isArray","Array","module","exports","freeGlobal","__webpack_require__","freeSelf","self","Object","root","Function","value","baseIsNative","getValue","object","key","undefined","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","type","arrayLikeKeys","baseKeys","isArrayLike","baseToString","defineProperty","configurable","enumerable","writable","DataView","Map","Promise","Set","WeakMap","baseGetTag","toSource","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","result","Ctor","constructor","ctorString","nativeCreate","getNative","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","this","clear","entry","set","prototype","get","has","eq","array","isKeyable","map","data","__data__","isSymbol","INFINITY","webpackPolyfill","deprecate","paths","children","l","i","isFunction","isLength","reIsDeepProp","reIsPlainProp","test","isObjectLike","symbolTag","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","other","MAX_SAFE_INTEGER","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","size","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","func","freeProcess","process","nodeUtil","types","require","binding","e","objectProto","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","getSymbols","symbol","call","baseFor","keys","iteratee","baseMatches","baseMatchesProperty","identity","property","baseIsEqualDeep","baseIsEqual","bitmask","customizer","stack","castPath","isArguments","isIndex","toKey","path","hasFunc","isKey","stringToPath","toString","global","isObject","asyncTag","funcTag","genTag","proxyTag","tag","funcToString","baseIsArguments","hasOwnProperty","arguments","reIsUint","baseTimes","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","push","baseIsTypedArray","baseUnary","nodeIsTypedArray","transform","arg","values","offset","baseGetAllKeys","arrayPush","keysFunc","symbolsFunc","Uint8Array","forEach","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","srcValue","d","__webpack_exports__","Doughnut","Bar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","source","_objectWithoutProperties","obj","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","a","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","destroy","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","Line","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","substr","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","nativeObjectToString","isOwn","unmasked","memoizeCapped","rePropName","reEscapeChar","charCodeAt","replace","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","isMasked","reIsHostCtor","funcProto","reIsNative","RegExp","coreJsData","maskSrcKey","IE_PROTO","HASH_UNDEFINED","assocIndexOf","getMapData","arrayMap","symbolProto","symbolToString","argsTag","LARGE_ARRAY_SIZE","pairs","typedArrayTags","isPrototype","nativeKeys","overArg","predicate","resIndex","createBaseFor","fromRight","iterable","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","objValue","equalArrays","equalByTag","equalObjects","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","setCacheAdd","setCacheHas","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objCtor","othCtor","isStrictComparable","hasIn","baseGet","baseHasIn","hasPath","baseProperty","basePropertyDeep","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","nextTick","browser","env","argv","version","versions","on","once","off","removeAllListeners","emit","prependListener","prependOnceListener","cwd","chdir","dir","umask","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","eachFunc"],"mappings":"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","file":"static/js/0.75afb061.chunk.js","sourcesContent":["/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;"],"sourceRoot":""}